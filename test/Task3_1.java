import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class Task3_1 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        st1920.automaton.MatchString matchString0 = new st1920.automaton.MatchString();
        java.lang.Class<?> wildcardClass1 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        java.lang.Class<?> wildcardClass9 = rEString3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        java.lang.Class<?> wildcardClass13 = rEString12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = st1920.automaton.MatchString.matches("", rEString30);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString27 = null;
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString40 = rEString24.makeConcatenation(rEString27, rEString39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        java.lang.Class<?> wildcardClass4 = rEString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString93 = rEString92.makeString();
        st1920.automaton.REString rEString94 = rEString87.makeOr(rEString89, rEString92);
        st1920.automaton.REString rEString97 = rEString84.makeRange(rEString89, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString98 = rEString81.makeAddOne(rEString84);
        st1920.automaton.REString rEString99 = rEString79.makeAddAlpha(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString45 = rEString44.makeDot();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean46 = st1920.automaton.MatchString.matches("", rEString45);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = st1920.automaton.MatchString.matches("", rEString18);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        rEString46.string = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        java.lang.String str4 = rEString3.string;
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString22 = rEString9.makeRange(rEString14, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString32 = rEString6.makeAnd(rEString22, rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString44 = rEString34.makeSquareBracketsTilde(rEString38);
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString73 = rEString47.makeAnd(rEString63, rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString88 = rEString75.makeRange(rEString80, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString89 = rEString47.makeTilde(rEString75);
        st1920.automaton.REString rEString90 = rEString31.makeConcatenation(rEString44, rEString47);
        st1920.automaton.REString rEString92 = rEString3.makeBraces(rEString90, (int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = st1920.automaton.MatchString.matches("hi!", rEString3);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "\"string\"" + "'", str4.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        java.lang.Class<?> wildcardClass55 = rEString54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString24 = rEString23.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = st1920.automaton.MatchString.matches("hi!", rEString23);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString59.makeHash();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString60.makeAsterisk(rEString75);
        st1920.automaton.REString rEString79 = rEString46.makeRange(rEString76, (int) (byte) 100, (int) (byte) 100);
        st1920.automaton.REString rEString80 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString83 = rEString79.makeBracesTwoInts(rEString80, (int) 'a', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString13 = rEString1.makeSquareBrackets(rEString12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString45 = rEString1.makeAt();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString60 = rEString47.makeRange(rEString52, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString73 = rEString72.makeHash();
        st1920.automaton.REString rEString76 = rEString47.makeRange(rEString73, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString77 = rEString1.makeTilde(rEString73);
        java.lang.Class<?> wildcardClass78 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        java.lang.Class<?> wildcardClass44 = rEString43.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString69 = rEString56.makeRange(rEString61, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString70 = rEString28.makeTilde(rEString56);
        st1920.automaton.REString rEString71 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString72 = rEString22.makeOr(rEString70, rEString71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = st1920.automaton.MatchString.matches("", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        java.lang.Class<?> wildcardClass9 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString50 = rEString39.makeBraces(rEString46, (int) '4');
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString50.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString25.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString68 = rEString67.makeHash();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString83 = rEString70.makeRange(rEString75, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = rEString68.makeAsterisk(rEString83);
        st1920.automaton.REString rEString85 = rEString55.makeSquareBracketsTilde(rEString68);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = st1920.automaton.MatchString.matches("\"string\"", rEString55);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        java.lang.Class<?> wildcardClass71 = rEString70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString36 = rEString10.makeAnd(rEString26, rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = rEString10.makeTilde(rEString38);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString64 = rEString54.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString75 = rEString64.makeBraces(rEString71, (int) '4');
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString75.makeSquareBracketsTilde(rEString77);
        st1920.automaton.REString rEString81 = rEString38.makeBraces(rEString79, (int) '#');
        st1920.automaton.REString rEString82 = rEString3.makeTilde(rEString79);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString3.makeSquareBracketsTilde(rEString84);
        st1920.automaton.REString rEString86 = null;
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString88.makeOr(rEString90, rEString93);
        st1920.automaton.REString rEString96 = rEString90.makeDot();
        st1920.automaton.REString rEString97 = rEString90.makeString();
        st1920.automaton.REString rEString98 = rEString90.makeString();
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString99 = rEString84.makeAnd(rEString86, rEString90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString30.makeAnd(rEString46, rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString75 = rEString58.makeAddOne(rEString61);
        st1920.automaton.REString rEString76 = rEString30.makeAddAlpha(rEString75);
        java.lang.String str77 = rEString30.string;
        st1920.automaton.REString rEString80 = rEString18.makeRange(rEString30, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString81 = rEString80.makeOne();
        st1920.automaton.REString rEString82 = rEString80.makeBeta();
        st1920.automaton.REString rEString83 = rEString80.makeAlpha();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = st1920.automaton.MatchString.matches("hi!b", rEString83);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        java.lang.Class<?> wildcardClass74 = rEString73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString72 = rEString1.makeAddAlpha(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString90 = rEString77.makeRange(rEString82, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString91 = rEString74.makeAddOne(rEString77);
        st1920.automaton.REString rEString94 = rEString1.makeBracesTwoInts(rEString74, (int) (short) 100, (int) ' ');
        st1920.automaton.REString rEString95 = null;
        st1920.automaton.REString rEString96 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString97 = rEString74.makeConcatenation(rEString95, rEString96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString89 = rEString54.makePlus(rEString88);
        java.lang.Class<?> wildcardClass90 = rEString89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString89 = rEString54.makePlus(rEString88);
        java.lang.String str90 = rEString54.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "[^hi!]" + "'", str90.equals("[^hi!]"));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString26.makeOne();
        st1920.automaton.REString rEString29 = null;
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString41 = rEString31.makeSquareBracketsTilde(rEString35);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString52 = rEString41.makeBraces(rEString48, (int) '4');
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString52.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString58.makeAnd(rEString74, rEString83);
        st1920.automaton.REString rEString86 = rEString54.makeBraces(rEString74, 0);
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString87 = rEString26.makeOr(rEString29, rEString54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString57 = rEString44.makeRange(rEString49, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString58 = rEString27.makeAnd(rEString40, rEString57);
        rEString40.string = "a";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString71 = rEString43.makeSquareBrackets(rEString66);
        java.lang.Class<?> wildcardClass72 = rEString43.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString4 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString5 = rEString2.makeAddAlpha(rEString4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!b");
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString30 = rEString20.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString41 = rEString30.makeBraces(rEString37, (int) '4');
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString41.makeSquareBracketsTilde(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString57 = rEString47.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString68 = rEString57.makeBraces(rEString64, (int) '4');
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString68.makeSquareBracketsTilde(rEString70);
        st1920.automaton.REString rEString73 = rEString43.makeSquareBracketsTilde(rEString70);
        st1920.automaton.REString rEString74 = rEString10.makeQuestionMark(rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString86 = rEString76.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString87 = rEString74.makeAddOne(rEString80);
        st1920.automaton.REString rEString88 = rEString2.makeAddOne(rEString80);
        java.lang.Class<?> wildcardClass89 = rEString88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = null;
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString66.makeAnd(rEString82, rEString91);
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString93 = rEString62.makeConcatenation(rEString64, rEString66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        st1920.automaton.REString rEString74 = rEString71.makeString();
        st1920.automaton.REString rEString75 = rEString74.makeDot();
        java.lang.Class<?> wildcardClass76 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString46 = rEString44.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString81 = rEString79.makeBeta();
        st1920.automaton.REString rEString82 = rEString81.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = rEString17.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString37 = rEString19.makeBraces(rEString35, 1);
        st1920.automaton.REString rEString38 = rEString2.makeAddAlpha(rEString35);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean39 = st1920.automaton.MatchString.matches("@", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString50 = rEString39.makeBraces(rEString46, (int) '4');
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString50.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString25.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString68 = rEString67.makeHash();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString83 = rEString70.makeRange(rEString75, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = rEString68.makeAsterisk(rEString83);
        st1920.automaton.REString rEString85 = rEString55.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString86 = rEString55.makeString();
        st1920.automaton.REString rEString87 = rEString55.makeAt();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString90 = rEString55.makePlus(rEString89);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = st1920.automaton.MatchString.matches("[^hi!]", rEString90);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString13 = rEString3.makeSquareBracketsTilde(rEString7);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString24 = rEString13.makeBraces(rEString20, (int) '4');
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString24.makeSquareBracketsTilde(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString51 = rEString40.makeBraces(rEString47, (int) '4');
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString51.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString56 = rEString26.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString68 = rEString58.makeSquareBracketsTilde(rEString62);
        st1920.automaton.REString rEString69 = rEString68.makeHash();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString84 = rEString71.makeRange(rEString76, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString85 = rEString69.makeAsterisk(rEString84);
        st1920.automaton.REString rEString86 = rEString56.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString87 = rEString56.makeString();
        st1920.automaton.REString rEString88 = rEString56.makeAt();
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString91 = rEString56.makePlus(rEString90);
        st1920.automaton.REString rEString94 = rEString1.makeRange(rEString91, (int) (byte) -1, 10);
        st1920.automaton.REString rEString95 = rEString1.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        java.lang.String str72 = rEString69.string;
        st1920.automaton.REString rEString73 = rEString69.makeAt();
        st1920.automaton.REString rEString74 = rEString69.makeString();
        java.lang.Class<?> wildcardClass75 = rEString74.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[^hi!]" + "'", str72.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString17.makeBraces(rEString33, 1);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString47 = rEString37.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString48 = rEString47.makeAt();
        st1920.automaton.REString rEString49 = rEString33.makeSquareBracketsTilde(rEString47);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = st1920.automaton.MatchString.matches("", rEString49);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeQuestionMark(rEString65);
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        java.lang.Class<?> wildcardClass81 = rEString79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        java.lang.Class<?> wildcardClass28 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString28 = rEString7.makeAsterisk(rEString17);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString30.makeAnd(rEString46, rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString71 = rEString58.makeRange(rEString63, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString72 = rEString30.makeTilde(rEString58);
        st1920.automaton.REString rEString73 = rEString30.makeOne();
        st1920.automaton.REString rEString74 = rEString30.makeAt();
        st1920.automaton.REString rEString75 = rEString28.makeTilde(rEString30);
        st1920.automaton.REString rEString76 = rEString75.makeAt();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = st1920.automaton.MatchString.matches("\"string\"{-1,32}", rEString76);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        java.lang.Class<?> wildcardClass15 = rEString6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString20 = rEString10.makeSquareBracketsTilde(rEString14);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString31 = rEString20.makeBraces(rEString27, (int) '4');
        st1920.automaton.REString rEString32 = rEString8.makeAddAlpha(rEString27);
        st1920.automaton.REString rEString33 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString34 = rEString27.makeSquareBrackets(rEString33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString83 = rEString72.makeBraces(rEString79, (int) '4');
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString83.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString88 = rEString58.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString89 = rEString25.makeQuestionMark(rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        java.lang.String str91 = rEString88.string;
        st1920.automaton.REString rEString92 = rEString88.makeAt();
        st1920.automaton.REString rEString93 = rEString88.makeString();
        st1920.automaton.REString rEString94 = rEString1.makeAsterisk(rEString88);
        st1920.automaton.REString rEString95 = rEString1.makeOne();
        st1920.automaton.REString rEString96 = rEString95.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^hi!]" + "'", str91.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = null;
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString22 = rEString12.makeSquareBracketsTilde(rEString16);
        st1920.automaton.REString rEString23 = rEString22.makeHash();
        st1920.automaton.REString rEString24 = rEString22.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString25 = rEString9.makeOr(rEString10, rEString24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString83 = rEString72.makeBraces(rEString79, (int) '4');
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString83.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString88 = rEString58.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString89 = rEString25.makeQuestionMark(rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        java.lang.String str91 = rEString88.string;
        st1920.automaton.REString rEString92 = rEString88.makeAt();
        st1920.automaton.REString rEString93 = rEString88.makeString();
        st1920.automaton.REString rEString94 = rEString1.makeAsterisk(rEString88);
        st1920.automaton.REString rEString95 = rEString1.makeOne();
        st1920.automaton.REString rEString96 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString98 = rEString95.makeBracesComma(rEString96, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^hi!]" + "'", str91.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        st1920.automaton.REString rEString74 = rEString73.makeHash();
        st1920.automaton.REString rEString75 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString76 = rEString73.makeQuestionMark(rEString75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString47 = rEString3.makeAlpha();
        java.lang.Class<?> wildcardClass48 = rEString3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        rEString48.string = "";
        st1920.automaton.REString rEString77 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString78 = rEString48.makeBeta();
        java.lang.String str79 = rEString78.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "b" + "'", str79.equals("b"));
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeDot();
        st1920.automaton.REString rEString74 = rEString29.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString72 = rEString71.makeHash();
        st1920.automaton.REString rEString75 = rEString46.makeRange(rEString72, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString86 = rEString79.makeOr(rEString81, rEString84);
        st1920.automaton.REString rEString87 = rEString77.makeSquareBracketsTilde(rEString81);
        st1920.automaton.REString rEString88 = rEString77.makeDot();
        st1920.automaton.REString rEString91 = rEString75.makeBracesTwoInts(rEString88, (int) (byte) 0, (int) (short) 10);
        st1920.automaton.REString rEString92 = rEString44.makeAddAlpha(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString28 = rEString27.makeHash();
        st1920.automaton.REString rEString31 = rEString2.makeRange(rEString28, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString33.makeDot();
        st1920.automaton.REString rEString47 = rEString31.makeBracesTwoInts(rEString44, (int) (byte) 0, (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = st1920.automaton.MatchString.matches("", rEString47);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeAsterisk(rEString72);
        st1920.automaton.REString rEString74 = rEString44.makeAddBeta(rEString57);
        rEString74.string = "#";
        st1920.automaton.REString rEString77 = rEString74.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString73 = rEString2.makeAddAlpha(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString91 = rEString78.makeRange(rEString83, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString92 = rEString75.makeAddOne(rEString78);
        st1920.automaton.REString rEString95 = rEString2.makeBracesTwoInts(rEString75, (int) (short) 100, (int) ' ');
        st1920.automaton.REString rEString96 = rEString95.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = st1920.automaton.MatchString.matches("a", rEString95);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        java.lang.Class<?> wildcardClass45 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString29.makeOne();
        st1920.automaton.REString rEString73 = rEString29.makeAt();
        st1920.automaton.REString rEString74 = rEString27.makeTilde(rEString29);
        st1920.automaton.REString rEString75 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString77 = rEString29.makeBraces(rEString75, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = rEString46.makeAddOne(rEString49);
        st1920.automaton.REString rEString64 = rEString43.makeAddBeta(rEString63);
        rEString43.string = "1";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        java.lang.String str4 = rEString3.string;
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString22 = rEString9.makeRange(rEString14, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString32 = rEString6.makeAnd(rEString22, rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString44 = rEString34.makeSquareBracketsTilde(rEString38);
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString73 = rEString47.makeAnd(rEString63, rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString88 = rEString75.makeRange(rEString80, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString89 = rEString47.makeTilde(rEString75);
        st1920.automaton.REString rEString90 = rEString31.makeConcatenation(rEString44, rEString47);
        st1920.automaton.REString rEString92 = rEString3.makeBraces(rEString90, (int) (short) 0);
        st1920.automaton.REString rEString93 = rEString3.makeHash();
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString93.makeAlpha();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean96 = st1920.automaton.MatchString.matches("@", rEString95);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "\"string\"" + "'", str4.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString30.makeAnd(rEString46, rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString75 = rEString58.makeAddOne(rEString61);
        st1920.automaton.REString rEString76 = rEString30.makeAddAlpha(rEString75);
        java.lang.String str77 = rEString30.string;
        st1920.automaton.REString rEString80 = rEString18.makeRange(rEString30, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString81 = rEString80.makeOne();
        st1920.automaton.REString rEString82 = rEString80.makeBeta();
        st1920.automaton.REString rEString83 = rEString80.makeAlpha();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = st1920.automaton.MatchString.matches("\"string\"", rEString80);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString85 = rEString81.makeAt();
        st1920.automaton.REString rEString86 = rEString3.makeAddBeta(rEString85);
        rEString85.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString89 = rEString85.makeAt();
        rEString89.string = "1";
        st1920.automaton.REString rEString92 = rEString89.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeQuestionMark(rEString65);
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        rEString46.string = "\"string\"{-1,32}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString9 = rEString2.makeOr(rEString4, rEString7);
        st1920.automaton.REString rEString10 = rEString7.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = st1920.automaton.MatchString.matches("", rEString7);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeDot();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString84 = rEString29.makeBraces(rEString77, 100);
        st1920.automaton.REString rEString85 = rEString84.makeDot();
        java.lang.Class<?> wildcardClass86 = rEString84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        rEString84.string = "hi!b";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString2 = rEString1.makeHash();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString30 = rEString4.makeAnd(rEString20, rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString4.makeTilde(rEString32);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString58 = rEString48.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString69 = rEString58.makeBraces(rEString65, (int) '4');
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString69.makeSquareBracketsTilde(rEString71);
        st1920.automaton.REString rEString75 = rEString32.makeBraces(rEString73, (int) '#');
        rEString75.string = "@";
        st1920.automaton.REString rEString78 = rEString2.makeSquareBrackets(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString83 = rEString72.makeBraces(rEString79, (int) '4');
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString83.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString88 = rEString58.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString89 = rEString25.makeQuestionMark(rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        java.lang.String str91 = rEString88.string;
        st1920.automaton.REString rEString92 = rEString88.makeAt();
        st1920.automaton.REString rEString93 = rEString88.makeString();
        st1920.automaton.REString rEString94 = rEString1.makeAsterisk(rEString88);
        st1920.automaton.REString rEString95 = rEString94.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^hi!]" + "'", str91.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString43.makeHash();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString30.makeConcatenation(rEString43, rEString46);
        st1920.automaton.REString rEString91 = rEString2.makeBraces(rEString89, (int) (short) 0);
        st1920.automaton.REString rEString92 = rEString2.makeHash();
        st1920.automaton.REString rEString93 = rEString2.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        java.lang.String str48 = rEString1.string;
        rEString1.string = "hi!b";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeQuestionMark(rEString92);
        st1920.automaton.REString rEString95 = rEString92.makeHash();
        st1920.automaton.REString rEString96 = rEString92.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        java.lang.String str72 = rEString69.string;
        st1920.automaton.REString rEString73 = rEString69.makeAt();
        st1920.automaton.REString rEString74 = rEString73.makeHash();
        st1920.automaton.REString rEString75 = rEString73.makeHash();
        java.lang.String str76 = rEString75.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[^hi!]" + "'", str72.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "#" + "'", str76.equals("#"));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString20 = rEString10.makeSquareBracketsTilde(rEString14);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString31 = rEString20.makeBraces(rEString27, (int) '4');
        st1920.automaton.REString rEString32 = rEString8.makeAddAlpha(rEString27);
        st1920.automaton.REString rEString33 = null;
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString88 = rEString62.makeAnd(rEString78, rEString87);
        st1920.automaton.REString rEString90 = rEString58.makeBraces(rEString78, 0);
        rEString90.string = "\"string\"{-1,32}";
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString93 = rEString27.makeConcatenation(rEString33, rEString90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString38 = rEString27.makeBraces(rEString34, (int) '4');
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString38.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString65 = rEString54.makeBraces(rEString61, (int) '4');
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString65.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString70 = rEString40.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString71 = rEString7.makeQuestionMark(rEString70);
        st1920.automaton.REString rEString72 = rEString70.makeOne();
        java.lang.String str73 = rEString70.string;
        st1920.automaton.REString rEString74 = rEString70.makeAt();
        st1920.automaton.REString rEString75 = rEString74.makeHash();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = st1920.automaton.MatchString.matches("b", rEString74);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "[^hi!]" + "'", str73.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString28 = rEString7.makeAsterisk(rEString17);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString34 = rEString28.makeBracesTwoInts(rEString31, (int) (byte) -1, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = st1920.automaton.MatchString.matches("\"string\"{-1,32}", rEString31);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString28 = rEString7.makeAsterisk(rEString17);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString34 = rEString28.makeBracesTwoInts(rEString31, (int) (byte) -1, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = st1920.automaton.MatchString.matches("a", rEString31);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        rEString48.string = "";
        st1920.automaton.REString rEString77 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString78 = rEString48.makeBeta();
        java.lang.String str79 = rEString48.string;
        st1920.automaton.REString rEString80 = rEString48.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString81 = rEString79.makeDot();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString96 = rEString83.makeRange(rEString88, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString97 = rEString88.makeOne();
        st1920.automaton.REString rEString98 = rEString81.makeAsterisk(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString24.makeAt();
        st1920.automaton.REString rEString56 = rEString55.makeDot();
        java.lang.Class<?> wildcardClass57 = rEString55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = rEString30.makeAddOne(rEString33);
        st1920.automaton.REString rEString48 = rEString2.makeAddAlpha(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString80 = rEString47.makeRange(rEString77, (int) (byte) 100, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = st1920.automaton.MatchString.matches("hi!{10,0}", rEString77);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString24.makeAt();
        st1920.automaton.REString rEString56 = rEString24.makeHash();
        st1920.automaton.REString rEString57 = rEString24.makeOne();
        st1920.automaton.REString rEString58 = rEString57.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        java.lang.Class<?> wildcardClass81 = rEString80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeQuestionMark(rEString92);
        st1920.automaton.REString rEString95 = rEString92.makeHash();
        rEString92.string = "@";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString45 = rEString1.makeAt();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString60 = rEString47.makeRange(rEString52, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString73 = rEString72.makeHash();
        st1920.automaton.REString rEString76 = rEString47.makeRange(rEString73, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString77 = rEString1.makeTilde(rEString73);
        st1920.automaton.REString rEString78 = rEString73.makeOne();
        java.lang.Class<?> wildcardClass79 = rEString78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString16 = rEString6.makeSquareBracketsTilde(rEString10);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString27 = rEString16.makeBraces(rEString23, (int) '4');
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString27.makeSquareBracketsTilde(rEString29);
        st1920.automaton.REString rEString32 = rEString31.makeDot();
        st1920.automaton.REString rEString33 = rEString4.makeTilde(rEString31);
        st1920.automaton.REString rEString34 = rEString4.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        rEString56.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString61.makeAt();
        st1920.automaton.REString rEString63 = rEString56.makeQuestionMark(rEString61);
        st1920.automaton.REString rEString64 = rEString61.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString46 = rEString44.makeOne();
        st1920.automaton.REString rEString47 = rEString44.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString81 = rEString79.makeBeta();
        st1920.automaton.REString rEString82 = rEString81.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        rEString17.string = "\"string\"";
        java.lang.Class<?> wildcardClass82 = rEString17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        st1920.automaton.REString rEString87 = rEString54.makeDot();
        java.lang.Class<?> wildcardClass88 = rEString54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        rEString5.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString51 = rEString40.makeBraces(rEString47, (int) '4');
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString51.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString78 = rEString67.makeBraces(rEString74, (int) '4');
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString78.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString83 = rEString53.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString84 = rEString20.makeQuestionMark(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString88.makeOr(rEString90, rEString93);
        st1920.automaton.REString rEString96 = rEString86.makeSquareBracketsTilde(rEString90);
        st1920.automaton.REString rEString97 = rEString84.makeAddOne(rEString90);
        st1920.automaton.REString rEString98 = rEString5.makePlus(rEString84);
        java.lang.String str99 = rEString84.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str99 + "' != '" + "[^hi!]?" + "'", str99.equals("[^hi!]?"));
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString27 = rEString26.makeDot();
        java.lang.String str28 = rEString26.string;
        st1920.automaton.REString rEString29 = rEString26.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[^hi!]" + "'", str28.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString73 = rEString2.makeAddAlpha(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString91 = rEString78.makeRange(rEString83, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString92 = rEString75.makeAddOne(rEString78);
        st1920.automaton.REString rEString95 = rEString2.makeBracesTwoInts(rEString75, (int) (short) 100, (int) ' ');
        st1920.automaton.REString rEString96 = rEString95.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = st1920.automaton.MatchString.matches("1", rEString96);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        rEString1.string = "hi!{10,0}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString49 = rEString46.makeString();
        st1920.automaton.REString rEString50 = rEString49.makeAt();
        st1920.automaton.REString rEString51 = rEString50.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString85 = rEString81.makeAt();
        st1920.automaton.REString rEString86 = rEString3.makeAddBeta(rEString85);
        java.lang.Class<?> wildcardClass87 = rEString86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString89 = rEString54.makePlus(rEString88);
        st1920.automaton.REString rEString90 = rEString89.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        java.lang.Class<?> wildcardClass80 = rEString79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        st1920.automaton.REString rEString74 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString77 = rEString71.makeBracesTwoInts(rEString74, 1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = rEString30.makeAddOne(rEString33);
        st1920.automaton.REString rEString48 = rEString2.makeAddAlpha(rEString47);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString80 = rEString47.makeRange(rEString77, (int) (byte) 100, (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = st1920.automaton.MatchString.matches("[^hi!]?", rEString77);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString32.makeSquareBracketsTilde(rEString36);
        st1920.automaton.REString rEString43 = rEString32.makeDot();
        st1920.automaton.REString rEString46 = rEString30.makeBracesTwoInts(rEString43, (int) (byte) 0, (int) (short) 10);
        st1920.automaton.REString rEString47 = rEString43.makeBeta();
        st1920.automaton.REString rEString48 = rEString43.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString65 = rEString52.makeRange(rEString57, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString77 = rEString70.makeOr(rEString72, rEString75);
        st1920.automaton.REString rEString80 = rEString67.makeRange(rEString72, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString81 = rEString65.makeQuestionMark(rEString67);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString67.makeBraces(rEString83, 1);
        st1920.automaton.REString rEString86 = rEString50.makeAddAlpha(rEString83);
        st1920.automaton.REString rEString87 = rEString83.makeAlpha();
        st1920.automaton.REString rEString88 = rEString43.makeTilde(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeQuestionMark(rEString65);
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString81 = rEString46.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = st1920.automaton.MatchString.matches("1", rEString23);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString62 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = rEString48.makeBraces(rEString64, 1);
        st1920.automaton.REString rEString67 = rEString31.makeSquareBracketsTilde(rEString64);
        st1920.automaton.REString rEString68 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString71 = rEString64.makeRange(rEString68, (int) (short) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = rEString25.makeBraces(rEString45, 0);
        st1920.automaton.REString rEString58 = rEString45.makeAlpha();
        st1920.automaton.REString rEString59 = rEString45.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = st1920.automaton.MatchString.matches("hi!{10,0}", rEString45);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString83 = rEString29.makeAddOne(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString72.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString83 = rEString70.makeAddOne(rEString76);
        java.lang.Class<?> wildcardClass84 = rEString83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        java.lang.Class<?> wildcardClass29 = rEString12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString13 = rEString3.makeSquareBracketsTilde(rEString7);
        st1920.automaton.REString rEString15 = rEString1.makeBracesComma(rEString7, (int) ' ');
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString38 = rEString27.makeBraces(rEString34, (int) '4');
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString38.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString60 = rEString47.makeRange(rEString52, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString70 = rEString44.makeAnd(rEString60, rEString69);
        st1920.automaton.REString rEString72 = rEString40.makeBraces(rEString60, 0);
        st1920.automaton.REString rEString73 = rEString60.makeAlpha();
        st1920.automaton.REString rEString74 = rEString60.makeBeta();
        st1920.automaton.REString rEString75 = rEString7.makeAddOne(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString28 = rEString16.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = rEString17.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString34 = rEString19.makeDot();
        st1920.automaton.REString rEString36 = rEString1.makeBracesComma(rEString34, (int) (short) -1);
        st1920.automaton.REString rEString37 = rEString1.makeAlpha();
        st1920.automaton.REString rEString38 = rEString37.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString43.makeHash();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString30.makeConcatenation(rEString43, rEString46);
        st1920.automaton.REString rEString91 = rEString2.makeBraces(rEString89, (int) (short) 0);
        st1920.automaton.REString rEString92 = rEString2.makeOne();
        st1920.automaton.REString rEString93 = rEString2.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        rEString5.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString51 = rEString40.makeBraces(rEString47, (int) '4');
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString51.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString78 = rEString67.makeBraces(rEString74, (int) '4');
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString78.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString83 = rEString53.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString84 = rEString20.makeQuestionMark(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString88.makeOr(rEString90, rEString93);
        st1920.automaton.REString rEString96 = rEString86.makeSquareBracketsTilde(rEString90);
        st1920.automaton.REString rEString97 = rEString84.makeAddOne(rEString90);
        st1920.automaton.REString rEString98 = rEString5.makePlus(rEString84);
        st1920.automaton.REString rEString99 = rEString5.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString31 = rEString30.makeAt();
        st1920.automaton.REString rEString32 = rEString31.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString92 = rEString79.makeRange(rEString84, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString93 = rEString76.makeAddOne(rEString79);
        st1920.automaton.REString rEString94 = rEString64.makeAddBeta(rEString79);
        java.lang.String str95 = rEString94.string;
        st1920.automaton.REString rEString96 = rEString3.makePlus(rEString94);
        java.lang.Class<?> wildcardClass97 = rEString96.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "hi!b" + "'", str95.equals("hi!b"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString22 = rEString9.makeRange(rEString14, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString32 = rEString6.makeAnd(rEString22, rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString47 = rEString34.makeRange(rEString39, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = rEString6.makeTilde(rEString34);
        st1920.automaton.REString rEString49 = rEString6.makeAlpha();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = rEString56.makeOne();
        st1920.automaton.REString rEString66 = rEString56.makeBeta();
        st1920.automaton.REString rEString67 = rEString3.makeAnd(rEString49, rEString56);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = st1920.automaton.MatchString.matches("\"string\"", rEString67);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString9 = rEString2.makeOr(rEString4, rEString7);
        st1920.automaton.REString rEString10 = rEString4.makeDot();
        st1920.automaton.REString rEString11 = rEString4.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString39 = rEString18.makeAsterisk(rEString28);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString45 = rEString39.makeBracesTwoInts(rEString42, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString47 = rEString4.makeBracesComma(rEString42, 1);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString47.makeAddBeta(rEString59);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = st1920.automaton.MatchString.matches("b", rEString59);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeBeta();
        st1920.automaton.REString rEString32 = rEString30.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString51 = rEString45.makeDot();
        st1920.automaton.REString rEString52 = rEString45.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString78 = rEString71.makeOr(rEString73, rEString76);
        st1920.automaton.REString rEString79 = rEString69.makeSquareBracketsTilde(rEString73);
        st1920.automaton.REString rEString80 = rEString59.makeAsterisk(rEString69);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString86 = rEString80.makeBracesTwoInts(rEString83, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString88 = rEString45.makeBracesComma(rEString83, 1);
        st1920.automaton.REString rEString89 = rEString41.makeAddAlpha(rEString83);
        st1920.automaton.REString rEString90 = rEString83.makeString();
        st1920.automaton.REString rEString93 = rEString30.makeRange(rEString83, (int) (short) 10, (int) (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        java.lang.String str15 = rEString14.string;
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString17.makeAnd(rEString33, rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString59 = rEString17.makeTilde(rEString45);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString82 = rEString71.makeBraces(rEString78, (int) '4');
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString86 = rEString82.makeSquareBracketsTilde(rEString84);
        st1920.automaton.REString rEString88 = rEString45.makeBraces(rEString86, (int) '#');
        st1920.automaton.REString rEString89 = rEString45.makeDot();
        st1920.automaton.REString rEString90 = rEString14.makeQuestionMark(rEString45);
        st1920.automaton.REString rEString91 = rEString14.makeAlpha();
        st1920.automaton.REString rEString92 = rEString11.makeAddOne(rEString91);
        st1920.automaton.REString rEString93 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString94 = rEString91.makeAsterisk(rEString93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "\"string\"" + "'", str15.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString13 = rEString12.makeHash();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString29 = rEString13.makeAsterisk(rEString28);
        st1920.automaton.REString rEString30 = rEString29.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = st1920.automaton.MatchString.matches("\"string\"{-1,32}", rEString30);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        st1920.automaton.REString rEString87 = rEString54.makeAlpha();
        st1920.automaton.REString rEString88 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString90 = rEString54.makeBracesComma(rEString88, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeBeta();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString41.makeQuestionMark(rEString43);
        st1920.automaton.REString rEString58 = rEString43.makeDot();
        st1920.automaton.REString rEString60 = rEString25.makeBracesComma(rEString58, (int) (short) -1);
        st1920.automaton.REString rEString61 = rEString22.makePlus(rEString25);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("b");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString74.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString95 = rEString84.makeBraces(rEString91, (int) '4');
        st1920.automaton.REString rEString96 = rEString72.makeAddAlpha(rEString91);
        st1920.automaton.REString rEString97 = rEString25.makeOr(rEString63, rEString72);
        st1920.automaton.REString rEString98 = rEString97.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString43.makeHash();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString30.makeConcatenation(rEString43, rEString46);
        st1920.automaton.REString rEString91 = rEString2.makeBraces(rEString89, (int) (short) 0);
        st1920.automaton.REString rEString92 = rEString2.makeHash();
        st1920.automaton.REString rEString93 = rEString92.makeString();
        st1920.automaton.REString rEString94 = rEString92.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString32.makeSquareBracketsTilde(rEString36);
        st1920.automaton.REString rEString43 = rEString32.makeDot();
        st1920.automaton.REString rEString46 = rEString30.makeBracesTwoInts(rEString43, (int) (byte) 0, (int) (short) 10);
        rEString46.string = "\"string\"";
        st1920.automaton.REString rEString49 = rEString46.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        java.lang.Class<?> wildcardClass49 = rEString32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeHash();
        st1920.automaton.REString rEString29 = rEString28.makeAt();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString32.makeAt();
        st1920.automaton.REString rEString34 = rEString33.makeAt();
        st1920.automaton.REString rEString35 = rEString33.makeBeta();
        st1920.automaton.REString rEString36 = rEString29.makePlus(rEString33);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString48 = rEString38.makeSquareBracketsTilde(rEString42);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString59 = rEString48.makeBraces(rEString55, (int) '4');
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString59.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString75 = rEString65.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString86 = rEString75.makeBraces(rEString82, (int) '4');
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString90 = rEString86.makeSquareBracketsTilde(rEString88);
        st1920.automaton.REString rEString91 = rEString61.makeSquareBracketsTilde(rEString88);
        st1920.automaton.REString rEString92 = rEString61.makeAt();
        st1920.automaton.REString rEString93 = rEString61.makeHash();
        st1920.automaton.REString rEString94 = rEString61.makeOne();
        st1920.automaton.REString rEString95 = rEString36.makeSquareBrackets(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString31 = rEString1.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString58 = rEString48.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString59 = rEString58.makeHash();
        st1920.automaton.REString rEString62 = rEString33.makeRange(rEString59, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString63 = rEString31.makeAsterisk(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString36 = rEString10.makeAnd(rEString26, rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = rEString10.makeTilde(rEString38);
        st1920.automaton.REString rEString53 = rEString3.makeSquareBrackets(rEString38);
        java.lang.String str54 = rEString38.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "hi!" + "'", str54.equals("hi!"));
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        java.lang.Class<?> wildcardClass47 = rEString46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        rEString3.string = "\"string\"";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString30.makeAlpha();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString50 = rEString37.makeRange(rEString42, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString34.makeAnd(rEString50, rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString34.makeTilde(rEString62);
        st1920.automaton.REString rEString77 = rEString34.makeAlpha();
        st1920.automaton.REString rEString78 = rEString34.makeOne();
        st1920.automaton.REString rEString79 = rEString78.makeHash();
        st1920.automaton.REString rEString80 = rEString30.makeQuestionMark(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString90 = rEString84.makeDot();
        st1920.automaton.REString rEString91 = rEString80.makeTilde(rEString84);
        st1920.automaton.REString rEString92 = rEString80.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        st1920.automaton.REString rEString74 = rEString71.makeString();
        java.lang.String str75 = rEString74.string;
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString90 = rEString77.makeRange(rEString82, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString91 = rEString74.makeTilde(rEString82);
        st1920.automaton.REString rEString92 = rEString91.makeString();
        java.lang.Class<?> wildcardClass93 = rEString92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "\"string\"" + "'", str75.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString72 = rEString1.makeAddAlpha(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString90 = rEString77.makeRange(rEString82, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString91 = rEString74.makeAddOne(rEString77);
        st1920.automaton.REString rEString94 = rEString1.makeBracesTwoInts(rEString74, (int) (short) 100, (int) ' ');
        st1920.automaton.REString rEString95 = rEString74.makeDot();
        st1920.automaton.REString rEString96 = rEString74.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString41 = rEString40.makeHash();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString69 = rEString43.makeAnd(rEString59, rEString68);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString84 = rEString71.makeRange(rEString76, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString85 = rEString43.makeTilde(rEString71);
        st1920.automaton.REString rEString86 = rEString27.makeConcatenation(rEString40, rEString43);
        st1920.automaton.REString rEString87 = rEString86.makeHash();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean88 = st1920.automaton.MatchString.matches("", rEString87);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        rEString72.string = "@";
        st1920.automaton.REString rEString75 = rEString72.makeDot();
        st1920.automaton.REString rEString76 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString79 = rEString75.makeRange(rEString76, (int) (short) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString32.makeSquareBracketsTilde(rEString36);
        st1920.automaton.REString rEString43 = rEString32.makeDot();
        st1920.automaton.REString rEString46 = rEString30.makeBracesTwoInts(rEString43, (int) (byte) 0, (int) (short) 10);
        st1920.automaton.REString rEString47 = rEString43.makeBeta();
        st1920.automaton.REString rEString48 = rEString43.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString73 = rEString2.makeAddAlpha(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString91 = rEString78.makeRange(rEString83, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString92 = rEString75.makeAddOne(rEString78);
        st1920.automaton.REString rEString95 = rEString2.makeBracesTwoInts(rEString75, (int) (short) 100, (int) ' ');
        st1920.automaton.REString rEString96 = rEString95.makeHash();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean97 = st1920.automaton.MatchString.matches("[^hi!]", rEString96);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = rEString17.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString34 = rEString19.makeDot();
        st1920.automaton.REString rEString36 = rEString1.makeBracesComma(rEString34, (int) (short) -1);
        st1920.automaton.REString rEString37 = rEString34.makeHash();
        java.lang.String str38 = rEString34.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "." + "'", str38.equals("."));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        rEString2.string = "hi!b";
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString35 = rEString22.makeRange(rEString27, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = rEString20.makeQuestionMark(rEString22);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString22.makeBraces(rEString38, 1);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString53 = rEString52.makeAt();
        st1920.automaton.REString rEString54 = rEString38.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString52.makeString();
        st1920.automaton.REString rEString56 = rEString2.makeAddBeta(rEString52);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString59 = rEString58.makeHash();
        st1920.automaton.REString rEString60 = rEString56.makeAsterisk(rEString59);
        st1920.automaton.REString rEString61 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString62 = rEString56.makeAddBeta(rEString61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString31 = rEString27.makeHash();
        st1920.automaton.REString rEString32 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString35 = rEString31.makeBracesTwoInts(rEString32, (-1), (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString1.makeDot();
        java.lang.Class<?> wildcardClass29 = rEString28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString72 = rEString51.makeAsterisk(rEString61);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString78 = rEString72.makeBracesTwoInts(rEString75, (int) (byte) -1, (int) ' ');
        java.lang.String str79 = rEString78.string;
        st1920.automaton.REString rEString80 = rEString44.makeAddAlpha(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "\"string\"{-1,32}" + "'", str79.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("@");
        st1920.automaton.REString rEString2 = rEString1.makeAt();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString30 = rEString4.makeAnd(rEString20, rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString4.makeTilde(rEString32);
        st1920.automaton.REString rEString47 = rEString46.makeDot();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString65 = rEString52.makeRange(rEString57, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = rEString49.makeAddOne(rEString52);
        st1920.automaton.REString rEString67 = rEString46.makeAddBeta(rEString66);
        st1920.automaton.REString rEString68 = rEString46.makeHash();
        st1920.automaton.REString rEString69 = rEString46.makeAt();
        st1920.automaton.REString rEString70 = rEString46.makeOne();
        st1920.automaton.REString rEString71 = rEString1.makeAddAlpha(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString81 = rEString79.makeDot();
        java.lang.String str82 = rEString79.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "hi!<1--1>" + "'", str82.equals("hi!<1--1>"));
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString73 = rEString71.makeOne();
        st1920.automaton.REString rEString74 = rEString44.makeAddOne(rEString73);
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString78 = rEString74.makeTilde(rEString77);
        st1920.automaton.REString rEString79 = rEString78.makeAt();
        st1920.automaton.REString rEString82 = rEString3.makeRange(rEString78, (int) (byte) 1, (int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeDot();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString84 = rEString29.makeBraces(rEString77, 100);
        st1920.automaton.REString rEString85 = rEString84.makeDot();
        st1920.automaton.REString rEString86 = rEString85.makeAt();
        st1920.automaton.REString rEString87 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString88 = rEString86.makeSquareBracketsTilde(rEString87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString59.makeHash();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString60.makeAsterisk(rEString75);
        st1920.automaton.REString rEString79 = rEString46.makeRange(rEString76, (int) (byte) 100, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString79.makeAlpha();
        java.lang.String str81 = rEString80.string;
        rEString80.string = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "a" + "'", str81.equals("a"));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeQuestionMark(rEString92);
        st1920.automaton.REString rEString95 = rEString92.makeOne();
        java.lang.Class<?> wildcardClass96 = rEString95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString30.makeAnd(rEString46, rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString75 = rEString58.makeAddOne(rEString61);
        st1920.automaton.REString rEString76 = rEString30.makeAddAlpha(rEString75);
        java.lang.String str77 = rEString30.string;
        st1920.automaton.REString rEString80 = rEString18.makeRange(rEString30, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString81 = rEString80.makeOne();
        st1920.automaton.REString rEString82 = rEString80.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = st1920.automaton.MatchString.matches("@", rEString80);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str77 + "' != '" + "hi!" + "'", str77.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString72 = rEString1.makeAddAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString1.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString36 = rEString10.makeAnd(rEString26, rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = rEString10.makeTilde(rEString38);
        st1920.automaton.REString rEString53 = rEString10.makeOne();
        st1920.automaton.REString rEString54 = rEString8.makeSquareBracketsTilde(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString47 = rEString3.makeAlpha();
        java.lang.String str48 = rEString47.string;
        st1920.automaton.REString rEString49 = rEString47.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "a" + "'", str48.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString50 = rEString39.makeBraces(rEString46, (int) '4');
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString50.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString25.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString56 = rEString25.makeAt();
        st1920.automaton.REString rEString57 = rEString25.makeHash();
        st1920.automaton.REString rEString58 = rEString25.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean59 = st1920.automaton.MatchString.matches("[^hi!]", rEString25);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString72.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString93 = rEString82.makeBraces(rEString89, (int) '4');
        st1920.automaton.REString rEString94 = rEString69.makeAddAlpha(rEString93);
        java.lang.Class<?> wildcardClass95 = rEString69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString32 = rEString31.makeOne();
        st1920.automaton.REString rEString33 = rEString31.makeAlpha();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString35.makeTilde(rEString63);
        st1920.automaton.REString rEString78 = rEString35.makeAlpha();
        st1920.automaton.REString rEString79 = rEString35.makeOne();
        st1920.automaton.REString rEString80 = rEString79.makeHash();
        st1920.automaton.REString rEString81 = rEString31.makeQuestionMark(rEString80);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = st1920.automaton.MatchString.matches("[^hi!]?", rEString81);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString15 = rEString6.makeOne();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString25 = rEString22.makeBeta();
        st1920.automaton.REString rEString26 = rEString25.makeDot();
        st1920.automaton.REString rEString27 = rEString15.makeAddAlpha(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString55 = rEString54.makeHash();
        st1920.automaton.REString rEString58 = rEString29.makeRange(rEString55, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString60 = rEString27.makeBracesComma(rEString29, (int) '#');
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString70 = rEString64.makeDot();
        st1920.automaton.REString rEString71 = rEString64.makeString();
        st1920.automaton.REString rEString72 = rEString27.makeTilde(rEString71);
        java.lang.String str73 = rEString71.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "\"string\"" + "'", str73.equals("\"string\""));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString6.makeDot();
        st1920.automaton.REString rEString13 = rEString6.makeString();
        st1920.automaton.REString rEString14 = rEString2.makeSquareBrackets(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString1.makeDot();
        st1920.automaton.REString rEString29 = rEString1.makeDot();
        rEString1.string = "\"string\"{-1,32}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString5 = rEString4.makeAt();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString16 = rEString9.makeOr(rEString11, rEString14);
        st1920.automaton.REString rEString17 = rEString7.makeSquareBracketsTilde(rEString11);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString28 = rEString17.makeBraces(rEString24, (int) '4');
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString28.makeSquareBracketsTilde(rEString30);
        st1920.automaton.REString rEString33 = rEString32.makeDot();
        st1920.automaton.REString rEString34 = rEString5.makeTilde(rEString32);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean35 = st1920.automaton.MatchString.matches("b", rEString32);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString63.makeTilde(rEString66);
        st1920.automaton.REString rEString68 = rEString67.makeAt();
        st1920.automaton.REString rEString69 = rEString68.makeOne();
        st1920.automaton.REString rEString70 = rEString69.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeBeta();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString41.makeQuestionMark(rEString43);
        st1920.automaton.REString rEString58 = rEString43.makeDot();
        st1920.automaton.REString rEString60 = rEString25.makeBracesComma(rEString58, (int) (short) -1);
        st1920.automaton.REString rEString61 = rEString22.makePlus(rEString25);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("b");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString74.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString95 = rEString84.makeBraces(rEString91, (int) '4');
        st1920.automaton.REString rEString96 = rEString72.makeAddAlpha(rEString91);
        st1920.automaton.REString rEString97 = rEString25.makeOr(rEString63, rEString72);
        java.lang.Class<?> wildcardClass98 = rEString72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString45 = rEString2.makeOne();
        st1920.automaton.REString rEString46 = rEString2.makeDot();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = st1920.automaton.MatchString.matches("[^hi!]?", rEString46);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        rEString18.string = "\"string\"";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        java.lang.Class<?> wildcardClass64 = rEString62.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString13 = rEString12.makeHash();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString29 = rEString13.makeAsterisk(rEString28);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = st1920.automaton.MatchString.matches("\"string\"?", rEString29);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString46.makeAlpha();
        st1920.automaton.REString rEString90 = rEString44.makeAsterisk(rEString89);
        st1920.automaton.REString rEString91 = rEString90.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = rEString25.makeBraces(rEString45, 0);
        rEString57.string = "\"string\"{-1,32}";
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = st1920.automaton.MatchString.matches("hi!{100}", rEString57);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        rEString48.string = "";
        st1920.automaton.REString rEString77 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString78 = rEString48.makeBeta();
        st1920.automaton.REString rEString79 = rEString48.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString30 = rEString29.makeHash();
        java.lang.String str31 = rEString30.string;
        rEString30.string = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "#" + "'", str31.equals("#"));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        java.lang.String str57 = rEString24.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "hi!" + "'", str57.equals("hi!"));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString26.makeOne();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString35.makeOne();
        st1920.automaton.REString rEString45 = rEString35.makeBeta();
        st1920.automaton.REString rEString46 = rEString26.makeAsterisk(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString31 = rEString30.makeAt();
        st1920.automaton.REString rEString32 = rEString30.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString15 = rEString6.makeOne();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString25 = rEString22.makeBeta();
        st1920.automaton.REString rEString26 = rEString25.makeDot();
        st1920.automaton.REString rEString27 = rEString15.makeAddAlpha(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString55 = rEString54.makeHash();
        st1920.automaton.REString rEString58 = rEString29.makeRange(rEString55, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString60 = rEString27.makeBracesComma(rEString29, (int) '#');
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString70 = rEString64.makeDot();
        st1920.automaton.REString rEString71 = rEString64.makeString();
        st1920.automaton.REString rEString72 = rEString27.makeTilde(rEString71);
        st1920.automaton.REString rEString73 = rEString72.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        java.lang.Class<?> wildcardClass81 = rEString79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        java.lang.Class<?> wildcardClass49 = rEString48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString56 = rEString35.makeAsterisk(rEString45);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString62 = rEString56.makeBracesTwoInts(rEString59, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString77 = rEString70.makeOr(rEString72, rEString75);
        st1920.automaton.REString rEString80 = rEString67.makeRange(rEString72, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString90 = rEString64.makeAnd(rEString80, rEString89);
        st1920.automaton.REString rEString91 = rEString89.makeOne();
        st1920.automaton.REString rEString92 = rEString62.makeAddOne(rEString91);
        st1920.automaton.REString rEString93 = rEString92.makeString();
        st1920.automaton.REString rEString94 = rEString92.makeHash();
        rEString92.string = "a";
        st1920.automaton.REString rEString98 = rEString28.makeBracesComma(rEString92, (int) '#');
        st1920.automaton.REString rEString99 = rEString98.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString32.makeSquareBracketsTilde(rEString36);
        st1920.automaton.REString rEString43 = rEString32.makeDot();
        st1920.automaton.REString rEString46 = rEString30.makeBracesTwoInts(rEString43, (int) (byte) 0, (int) (short) 10);
        st1920.automaton.REString rEString47 = rEString43.makeBeta();
        st1920.automaton.REString rEString48 = rEString43.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = rEString50.makeDot();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString71.makeOne();
        st1920.automaton.REString rEString82 = rEString64.makeBracesComma(rEString80, (int) (byte) 10);
        st1920.automaton.REString rEString83 = rEString48.makeTilde(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString1.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString24 = rEString11.makeRange(rEString16, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString26.makeAnd(rEString42, rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString68 = rEString26.makeTilde(rEString54);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString71.makeAddOne(rEString74);
        st1920.automaton.REString rEString89 = rEString68.makeAddBeta(rEString88);
        rEString88.string = "@";
        st1920.automaton.REString rEString92 = rEString24.makeAsterisk(rEString88);
        st1920.automaton.REString rEString93 = rEString1.makeAddBeta(rEString92);
        st1920.automaton.REString rEString94 = rEString93.makeAt();
        st1920.automaton.REString rEString95 = rEString93.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        rEString2.string = "hi!b";
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString35 = rEString22.makeRange(rEString27, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = rEString20.makeQuestionMark(rEString22);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString22.makeBraces(rEString38, 1);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString53 = rEString52.makeAt();
        st1920.automaton.REString rEString54 = rEString38.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString52.makeString();
        st1920.automaton.REString rEString56 = rEString2.makeAddBeta(rEString52);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString59 = rEString58.makeHash();
        st1920.automaton.REString rEString60 = rEString56.makeAsterisk(rEString59);
        st1920.automaton.REString rEString61 = null;
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString68.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString72 = rEString59.makeConcatenation(rEString61, rEString71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        java.lang.Class<?> wildcardClass19 = rEString4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString16 = rEString6.makeSquareBracketsTilde(rEString10);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString27 = rEString16.makeBraces(rEString23, (int) '4');
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString27.makeSquareBracketsTilde(rEString29);
        st1920.automaton.REString rEString32 = rEString31.makeDot();
        st1920.automaton.REString rEString33 = rEString4.makeTilde(rEString31);
        java.lang.Class<?> wildcardClass34 = rEString31.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString26.makeOne();
        rEString26.string = "hi!";
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString32.makeSquareBracketsTilde(rEString36);
        st1920.automaton.REString rEString43 = rEString32.makeDot();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString86 = rEString79.makeOr(rEString81, rEString84);
        st1920.automaton.REString rEString89 = rEString76.makeRange(rEString81, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString90 = rEString73.makeAddOne(rEString76);
        st1920.automaton.REString rEString91 = rEString61.makeAddBeta(rEString76);
        st1920.automaton.REString rEString92 = rEString76.makeBeta();
        st1920.automaton.REString rEString93 = rEString32.makeAddBeta(rEString76);
        st1920.automaton.REString rEString94 = rEString26.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString95 = rEString32.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString21 = rEString11.makeSquareBracketsTilde(rEString15);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString32 = rEString21.makeBraces(rEString28, (int) '4');
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString32.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString37 = rEString36.makeDot();
        st1920.automaton.REString rEString38 = rEString9.makeAddOne(rEString36);
        st1920.automaton.REString rEString39 = rEString36.makeDot();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("[^hi!]?");
        st1920.automaton.REString rEString42 = rEString39.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString57 = rEString44.makeRange(rEString49, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeQuestionMark(rEString59);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString77 = rEString59.makeBraces(rEString75, 1);
        st1920.automaton.REString rEString78 = rEString42.makeSquareBrackets(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        rEString5.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString51 = rEString40.makeBraces(rEString47, (int) '4');
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString51.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString78 = rEString67.makeBraces(rEString74, (int) '4');
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString78.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString83 = rEString53.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString84 = rEString20.makeQuestionMark(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString88.makeOr(rEString90, rEString93);
        st1920.automaton.REString rEString96 = rEString86.makeSquareBracketsTilde(rEString90);
        st1920.automaton.REString rEString97 = rEString84.makeAddOne(rEString90);
        st1920.automaton.REString rEString98 = rEString5.makePlus(rEString84);
        st1920.automaton.REString rEString99 = rEString98.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString21 = rEString11.makeSquareBracketsTilde(rEString15);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString32 = rEString21.makeBraces(rEString28, (int) '4');
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString32.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString37 = rEString36.makeDot();
        st1920.automaton.REString rEString38 = rEString9.makeAddOne(rEString36);
        st1920.automaton.REString rEString39 = rEString36.makeDot();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("[^hi!]?");
        st1920.automaton.REString rEString42 = rEString39.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString43 = rEString42.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString15 = rEString6.makeOne();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString25 = rEString22.makeBeta();
        st1920.automaton.REString rEString26 = rEString25.makeDot();
        st1920.automaton.REString rEString27 = rEString15.makeAddAlpha(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString55 = rEString54.makeHash();
        st1920.automaton.REString rEString58 = rEString29.makeRange(rEString55, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString60 = rEString27.makeBracesComma(rEString29, (int) '#');
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString70 = rEString64.makeDot();
        st1920.automaton.REString rEString71 = rEString64.makeString();
        st1920.automaton.REString rEString72 = rEString27.makeTilde(rEString71);
        java.lang.Class<?> wildcardClass73 = rEString72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        java.lang.String str72 = rEString69.string;
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString76.makeDot();
        st1920.automaton.REString rEString83 = rEString76.makeString();
        st1920.automaton.REString rEString84 = rEString76.makeHash();
        st1920.automaton.REString rEString85 = rEString69.makeAddAlpha(rEString84);
        java.lang.String str86 = rEString69.string;
        st1920.automaton.REString rEString87 = rEString69.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[^hi!]" + "'", str72.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "[^hi!]" + "'", str86.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!<1--1>");
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString15 = rEString6.makeOne();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString25 = rEString22.makeBeta();
        st1920.automaton.REString rEString26 = rEString25.makeDot();
        st1920.automaton.REString rEString27 = rEString15.makeAddAlpha(rEString25);
        st1920.automaton.REString rEString28 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString29 = rEString25.makeSquareBrackets(rEString28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString49 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString51 = rEString46.makeBraces(rEString49, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString84.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = rEString25.makeBraces(rEString45, 0);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString59.makeDot();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString88 = rEString75.makeRange(rEString80, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString89 = rEString80.makeOne();
        st1920.automaton.REString rEString91 = rEString73.makeBracesComma(rEString89, (int) (byte) 10);
        st1920.automaton.REString rEString94 = rEString45.makeRange(rEString89, 100, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = st1920.automaton.MatchString.matches("@", rEString94);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeAddAlpha(rEString93);
        java.lang.Class<?> wildcardClass95 = rEString93.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString9 = rEString2.makeOr(rEString4, rEString7);
        st1920.automaton.REString rEString10 = rEString4.makeDot();
        st1920.automaton.REString rEString11 = rEString4.makeString();
        st1920.automaton.REString rEString12 = rEString4.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString50 = rEString39.makeBraces(rEString46, (int) '4');
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString50.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString77 = rEString66.makeBraces(rEString73, (int) '4');
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString77.makeSquareBracketsTilde(rEString79);
        st1920.automaton.REString rEString82 = rEString52.makeSquareBracketsTilde(rEString79);
        st1920.automaton.REString rEString83 = rEString19.makeQuestionMark(rEString82);
        st1920.automaton.REString rEString84 = rEString82.makeOne();
        java.lang.String str85 = rEString82.string;
        st1920.automaton.REString rEString86 = rEString82.makeAt();
        st1920.automaton.REString rEString87 = rEString4.makeAddBeta(rEString86);
        rEString87.string = "\"string\"?";
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = st1920.automaton.MatchString.matches("a", rEString87);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "[^hi!]" + "'", str85.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString85 = rEString81.makeAt();
        st1920.automaton.REString rEString86 = rEString3.makeAddBeta(rEString85);
        st1920.automaton.REString rEString87 = rEString3.makeOne();
        java.lang.Class<?> wildcardClass88 = rEString87.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString35 = rEString16.makeDot();
        java.lang.Class<?> wildcardClass36 = rEString35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString13 = rEString7.makeDot();
        st1920.automaton.REString rEString14 = rEString7.makeString();
        st1920.automaton.REString rEString15 = rEString3.makeSquareBrackets(rEString14);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = st1920.automaton.MatchString.matches("hi!{10,0}", rEString14);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = rEString17.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString34 = rEString19.makeDot();
        st1920.automaton.REString rEString36 = rEString1.makeBracesComma(rEString34, (int) (short) -1);
        st1920.automaton.REString rEString37 = rEString1.makeAlpha();
        java.lang.String str38 = rEString37.string;
        st1920.automaton.REString rEString39 = rEString37.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "a" + "'", str38.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString83 = rEString72.makeBraces(rEString79, (int) '4');
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString83.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString88 = rEString58.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString89 = rEString25.makeQuestionMark(rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        java.lang.String str91 = rEString88.string;
        st1920.automaton.REString rEString92 = rEString88.makeAt();
        st1920.automaton.REString rEString93 = rEString88.makeString();
        st1920.automaton.REString rEString94 = rEString1.makeAsterisk(rEString88);
        st1920.automaton.REString rEString95 = rEString1.makeOne();
        st1920.automaton.REString rEString96 = rEString1.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^hi!]" + "'", str91.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString13 = rEString11.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString63.makeHash();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString77 = rEString70.makeOr(rEString72, rEString75);
        st1920.automaton.REString rEString80 = rEString67.makeRange(rEString72, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString81 = rEString63.makeAddBeta(rEString67);
        java.lang.String str82 = rEString67.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "hi!" + "'", str82.equals("hi!"));
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeBeta();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString41.makeQuestionMark(rEString43);
        st1920.automaton.REString rEString58 = rEString43.makeDot();
        st1920.automaton.REString rEString60 = rEString25.makeBracesComma(rEString58, (int) (short) -1);
        st1920.automaton.REString rEString61 = rEString22.makePlus(rEString25);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("b");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString74.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString95 = rEString84.makeBraces(rEString91, (int) '4');
        st1920.automaton.REString rEString96 = rEString72.makeAddAlpha(rEString91);
        st1920.automaton.REString rEString97 = rEString25.makeOr(rEString63, rEString72);
        st1920.automaton.REString rEString98 = rEString25.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString70.makeAlpha();
        st1920.automaton.REString rEString74 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString75 = rEString73.makeAddAlpha(rEString74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString22.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = rEString16.makeQuestionMark(rEString18);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString18.makeBraces(rEString34, 1);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString48 = rEString38.makeSquareBracketsTilde(rEString42);
        st1920.automaton.REString rEString49 = rEString48.makeAt();
        st1920.automaton.REString rEString50 = rEString34.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString62 = rEString52.makeSquareBracketsTilde(rEString56);
        st1920.automaton.REString rEString63 = rEString62.makeHash();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeAsterisk(rEString78);
        st1920.automaton.REString rEString80 = rEString79.makeBeta();
        st1920.automaton.REString rEString81 = rEString79.makeString();
        st1920.automaton.REString rEString82 = rEString48.makeAddBeta(rEString81);
        st1920.automaton.REString rEString84 = rEString1.makeBracesComma(rEString48, 0);
        st1920.automaton.REString rEString85 = rEString1.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeBeta();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString41 = rEString31.makeSquareBracketsTilde(rEString35);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString52 = rEString41.makeBraces(rEString48, (int) '4');
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString52.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString58 = rEString28.makeBracesComma(rEString54, (int) (byte) -1);
        st1920.automaton.REString rEString59 = rEString58.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        rEString48.string = "";
        st1920.automaton.REString rEString77 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString78 = rEString48.makeBeta();
        java.lang.String str79 = rEString48.string;
        java.lang.Class<?> wildcardClass80 = rEString48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString59.makeHash();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString60.makeAsterisk(rEString75);
        st1920.automaton.REString rEString79 = rEString46.makeRange(rEString76, (int) (byte) 100, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString46.makeDot();
        java.lang.Class<?> wildcardClass81 = rEString46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = rEString17.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString34 = rEString19.makeDot();
        st1920.automaton.REString rEString36 = rEString1.makeBracesComma(rEString34, (int) (short) -1);
        rEString36.string = "a";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString26.makeHash();
        st1920.automaton.REString rEString30 = rEString1.makeRange(rEString27, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString32.makeSquareBracketsTilde(rEString36);
        st1920.automaton.REString rEString43 = rEString32.makeDot();
        st1920.automaton.REString rEString46 = rEString30.makeBracesTwoInts(rEString43, (int) (byte) 0, (int) (short) 10);
        rEString46.string = "\"string\"";
        rEString46.string = ".";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = rEString16.makeQuestionMark(rEString18);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString18.makeBraces(rEString34, 1);
        st1920.automaton.REString rEString37 = rEString1.makeAddAlpha(rEString34);
        st1920.automaton.REString rEString38 = rEString1.makeAlpha();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString50 = rEString40.makeSquareBracketsTilde(rEString44);
        st1920.automaton.REString rEString51 = rEString50.makeHash();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString66 = rEString53.makeRange(rEString58, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString67 = rEString51.makeAsterisk(rEString66);
        st1920.automaton.REString rEString68 = rEString67.makeBeta();
        st1920.automaton.REString rEString69 = rEString38.makeAddOne(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        st1920.automaton.REString rEString57 = rEString44.makeAlpha();
        st1920.automaton.REString rEString58 = rEString44.makeBeta();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString86 = rEString60.makeAnd(rEString76, rEString85);
        st1920.automaton.REString rEString87 = rEString44.makeAddBeta(rEString76);
        java.lang.String str88 = rEString87.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str88 + "' != '" + "hi!<-1-100>b" + "'", str88.equals("hi!<-1-100>b"));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString77 = rEString64.makeRange(rEString69, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = rEString62.makeQuestionMark(rEString64);
        st1920.automaton.REString rEString79 = rEString64.makeDot();
        st1920.automaton.REString rEString81 = rEString46.makeBracesComma(rEString79, (int) (short) -1);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString92 = rEString85.makeOr(rEString87, rEString90);
        st1920.automaton.REString rEString93 = rEString83.makeSquareBracketsTilde(rEString87);
        st1920.automaton.REString rEString94 = rEString93.makeHash();
        st1920.automaton.REString rEString95 = rEString93.makeOne();
        st1920.automaton.REString rEString96 = rEString93.makeAlpha();
        st1920.automaton.REString rEString97 = rEString79.makeAddBeta(rEString96);
        st1920.automaton.REString rEString98 = rEString44.makeSquareBrackets(rEString97);
        st1920.automaton.REString rEString99 = rEString98.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeBeta();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString41.makeQuestionMark(rEString43);
        st1920.automaton.REString rEString58 = rEString43.makeDot();
        st1920.automaton.REString rEString60 = rEString25.makeBracesComma(rEString58, (int) (short) -1);
        st1920.automaton.REString rEString61 = rEString22.makePlus(rEString25);
        st1920.automaton.REString rEString62 = rEString22.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeAsterisk(rEString72);
        st1920.automaton.REString rEString74 = rEString44.makeAddBeta(rEString57);
        st1920.automaton.REString rEString75 = rEString57.makeAt();
        st1920.automaton.REString rEString76 = rEString75.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeBeta();
        st1920.automaton.REString rEString30 = rEString29.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString46.makeAlpha();
        st1920.automaton.REString rEString90 = rEString44.makeAsterisk(rEString89);
        st1920.automaton.REString rEString91 = rEString90.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString1.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString24 = rEString11.makeRange(rEString16, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString26.makeAnd(rEString42, rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString68 = rEString26.makeTilde(rEString54);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString71.makeAddOne(rEString74);
        st1920.automaton.REString rEString89 = rEString68.makeAddBeta(rEString88);
        rEString88.string = "@";
        st1920.automaton.REString rEString92 = rEString24.makeAsterisk(rEString88);
        st1920.automaton.REString rEString93 = rEString1.makeAddBeta(rEString92);
        st1920.automaton.REString rEString94 = rEString93.makeHash();
        java.lang.String str95 = rEString94.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "#" + "'", str95.equals("#"));
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        java.lang.String str45 = rEString44.string;
        st1920.automaton.REString rEString46 = rEString44.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "1" + "'", str45.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString89 = rEString54.makePlus(rEString88);
        st1920.automaton.REString rEString90 = rEString54.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString41 = rEString31.makeSquareBracketsTilde(rEString35);
        st1920.automaton.REString rEString42 = rEString21.makeAsterisk(rEString31);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString48 = rEString42.makeBracesTwoInts(rEString45, (int) (byte) -1, (int) ' ');
        java.lang.String str49 = rEString48.string;
        st1920.automaton.REString rEString50 = rEString14.makeSquareBrackets(rEString48);
        st1920.automaton.REString rEString51 = rEString14.makeBeta();
        st1920.automaton.REString rEString52 = rEString51.makeAlpha();
        rEString52.string = "#";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "\"string\"{-1,32}" + "'", str49.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString17.makeAddBeta(rEString32);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString50.makeAt();
        st1920.automaton.REString rEString52 = rEString51.makeAt();
        st1920.automaton.REString rEString53 = rEString51.makeBeta();
        st1920.automaton.REString rEString54 = rEString17.makePlus(rEString53);
        st1920.automaton.REString rEString55 = rEString17.makeAlpha();
        st1920.automaton.REString rEString56 = rEString55.makeAlpha();
        st1920.automaton.REString rEString57 = rEString55.makeOne();
        st1920.automaton.REString rEString58 = rEString55.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString30.makeAnd(rEString46, rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString71 = rEString58.makeRange(rEString63, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString72 = rEString30.makeTilde(rEString58);
        st1920.automaton.REString rEString73 = rEString72.makeDot();
        st1920.automaton.REString rEString74 = rEString28.makeAddBeta(rEString72);
        st1920.automaton.REString rEString75 = rEString72.makeString();
        java.lang.String str76 = rEString75.string;
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString91 = rEString78.makeRange(rEString83, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString92 = rEString75.makeTilde(rEString83);
        st1920.automaton.REString rEString93 = rEString83.makeDot();
        st1920.automaton.REString rEString94 = rEString83.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean95 = st1920.automaton.MatchString.matches("", rEString83);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "\"string\"" + "'", str76.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeHash();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString54 = rEString33.makeAsterisk(rEString43);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString60 = rEString54.makeBracesTwoInts(rEString57, (int) (byte) -1, (int) ' ');
        java.lang.String str61 = rEString60.string;
        st1920.automaton.REString rEString62 = rEString26.makeSquareBrackets(rEString60);
        st1920.automaton.REString rEString63 = rEString26.makeBeta();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString75 = rEString65.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString86 = rEString75.makeBraces(rEString82, (int) '4');
        st1920.automaton.REString rEString87 = rEString86.makeBeta();
        st1920.automaton.REString rEString88 = rEString3.makeOr(rEString63, rEString86);
        rEString63.string = "hi!<-1-100>b";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "\"string\"{-1,32}" + "'", str61.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString6.makeOne();
        st1920.automaton.REString rEString72 = rEString71.makeBeta();
        st1920.automaton.REString rEString73 = rEString72.makeAlpha();
        st1920.automaton.REString rEString74 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString75 = rEString73.makeQuestionMark(rEString74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString(".");
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString63.makeTilde(rEString66);
        st1920.automaton.REString rEString68 = rEString63.makeHash();
        st1920.automaton.REString rEString69 = rEString68.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString26.makeOr(rEString28, rEString31);
        st1920.automaton.REString rEString36 = rEString23.makeRange(rEString28, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString20.makeAnd(rEString36, rEString45);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = rEString48.makeAddOne(rEString51);
        st1920.automaton.REString rEString66 = rEString36.makeAddBeta(rEString51);
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString69.makeAt();
        st1920.automaton.REString rEString71 = rEString70.makeAt();
        st1920.automaton.REString rEString72 = rEString70.makeBeta();
        st1920.automaton.REString rEString73 = rEString36.makePlus(rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString83 = rEString77.makeDot();
        st1920.automaton.REString rEString84 = rEString77.makeOne();
        st1920.automaton.REString rEString85 = rEString77.makeString();
        st1920.automaton.REString rEString86 = rEString4.makeAnd(rEString73, rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString36 = rEString10.makeAnd(rEString26, rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = rEString10.makeTilde(rEString38);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString64 = rEString54.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString75 = rEString64.makeBraces(rEString71, (int) '4');
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString75.makeSquareBracketsTilde(rEString77);
        st1920.automaton.REString rEString81 = rEString38.makeBraces(rEString79, (int) '#');
        st1920.automaton.REString rEString82 = rEString3.makeTilde(rEString79);
        st1920.automaton.REString rEString83 = rEString79.makeOne();
        st1920.automaton.REString rEString84 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString85 = rEString79.makeSquareBrackets(rEString84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString45 = rEString2.makeOne();
        st1920.automaton.REString rEString46 = rEString2.makeAt();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString73 = rEString63.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString74 = rEString73.makeHash();
        st1920.automaton.REString rEString77 = rEString48.makeRange(rEString74, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString78 = rEString2.makeTilde(rEString74);
        st1920.automaton.REString rEString79 = rEString74.makeOne();
        st1920.automaton.REString rEString80 = rEString74.makeString();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean81 = st1920.automaton.MatchString.matches("a", rEString80);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeQuestionMark(rEString92);
        st1920.automaton.REString rEString95 = rEString80.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString28 = rEString16.makeBeta();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        java.lang.String str32 = rEString31.string;
        rEString31.string = "hi!b";
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString49 = rEString36.makeRange(rEString41, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = rEString49.makeQuestionMark(rEString51);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString69 = rEString51.makeBraces(rEString67, 1);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString81 = rEString71.makeSquareBracketsTilde(rEString75);
        st1920.automaton.REString rEString82 = rEString81.makeAt();
        st1920.automaton.REString rEString83 = rEString67.makeSquareBracketsTilde(rEString81);
        st1920.automaton.REString rEString84 = rEString81.makeString();
        st1920.automaton.REString rEString85 = rEString31.makeAddBeta(rEString81);
        st1920.automaton.REString rEString86 = rEString28.makeTilde(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "\"string\"" + "'", str32.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString18 = rEString12.makeDot();
        st1920.automaton.REString rEString19 = rEString12.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString34 = rEString21.makeRange(rEString26, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString26.makeAsterisk(rEString36);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString53 = rEString47.makeBracesTwoInts(rEString50, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString55 = rEString12.makeBracesComma(rEString50, 1);
        st1920.automaton.REString rEString56 = rEString8.makeAddAlpha(rEString50);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString58.makeAnd(rEString74, rEString83);
        st1920.automaton.REString rEString85 = rEString8.makeAddAlpha(rEString74);
        st1920.automaton.REString rEString86 = rEString74.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString64.makeAt();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString74.makeOne();
        st1920.automaton.REString rEString84 = rEString74.makeBeta();
        st1920.automaton.REString rEString85 = rEString64.makeConcatenation(rEString67, rEString84);
        st1920.automaton.REString rEString86 = rEString85.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString25 = rEString15.makeSquareBracketsTilde(rEString19);
        st1920.automaton.REString rEString27 = rEString13.makeBracesComma(rEString19, (int) ' ');
        st1920.automaton.REString rEString28 = rEString11.makeQuestionMark(rEString19);
        rEString28.string = "hi!<-1-100>b";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeString();
        rEString29.string = "#";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString45.makeAddBeta(rEString60);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString78.makeAt();
        st1920.automaton.REString rEString80 = rEString79.makeAt();
        st1920.automaton.REString rEString81 = rEString79.makeBeta();
        st1920.automaton.REString rEString82 = rEString45.makePlus(rEString81);
        st1920.automaton.REString rEString85 = rEString27.makeBracesTwoInts(rEString81, (int) (short) 1, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = st1920.automaton.MatchString.matches("\"string\"", rEString81);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString30.makeAlpha();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString50 = rEString37.makeRange(rEString42, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString34.makeAnd(rEString50, rEString59);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString34.makeTilde(rEString62);
        st1920.automaton.REString rEString77 = rEString34.makeAlpha();
        st1920.automaton.REString rEString78 = rEString34.makeOne();
        st1920.automaton.REString rEString79 = rEString78.makeHash();
        st1920.automaton.REString rEString80 = rEString30.makeQuestionMark(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString90 = rEString84.makeDot();
        st1920.automaton.REString rEString91 = rEString80.makeTilde(rEString84);
        java.lang.String str92 = rEString91.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "~hi!" + "'", str92.equals("~hi!"));
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString6.makeBeta();
        st1920.automaton.REString rEString10 = rEString9.makeDot();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString12.makeAnd(rEString28, rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString50 = rEString40.makeSquareBracketsTilde(rEString44);
        st1920.automaton.REString rEString51 = rEString50.makeHash();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString69 = rEString56.makeRange(rEString61, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString78 = rEString71.makeOr(rEString73, rEString76);
        st1920.automaton.REString rEString79 = rEString53.makeAnd(rEString69, rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString94 = rEString81.makeRange(rEString86, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString95 = rEString53.makeTilde(rEString81);
        st1920.automaton.REString rEString96 = rEString37.makeConcatenation(rEString50, rEString53);
        st1920.automaton.REString rEString97 = rEString9.makeSquareBrackets(rEString53);
        st1920.automaton.REString rEString98 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString99 = rEString9.makeAsterisk(rEString98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        java.lang.String str2 = rEString1.string;
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString29 = rEString19.makeSquareBracketsTilde(rEString23);
        st1920.automaton.REString rEString30 = rEString9.makeAsterisk(rEString19);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString36 = rEString30.makeBracesTwoInts(rEString33, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString54 = rEString41.makeRange(rEString46, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString64 = rEString38.makeAnd(rEString54, rEString63);
        st1920.automaton.REString rEString65 = rEString63.makeOne();
        st1920.automaton.REString rEString66 = rEString36.makeAddOne(rEString65);
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString70 = rEString66.makeTilde(rEString69);
        st1920.automaton.REString rEString72 = rEString1.makeBracesComma(rEString66, 10);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString74.makeString();
        st1920.automaton.REString rEString83 = rEString66.makeAddBeta(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString57 = rEString47.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString58 = rEString57.makeHash();
        st1920.automaton.REString rEString61 = rEString32.makeRange(rEString58, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString91 = rEString78.makeRange(rEString83, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString92 = rEString76.makeQuestionMark(rEString78);
        st1920.automaton.REString rEString93 = rEString92.makeOne();
        st1920.automaton.REString rEString94 = rEString92.makeDot();
        st1920.automaton.REString rEString95 = rEString16.makeOr(rEString61, rEString94);
        st1920.automaton.REString rEString96 = rEString95.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString54.makeBeta();
        st1920.automaton.REString rEString56 = rEString54.makeString();
        st1920.automaton.REString rEString57 = rEString54.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString30 = rEString29.makeHash();
        st1920.automaton.REString rEString31 = rEString30.makeHash();
        st1920.automaton.REString rEString32 = rEString30.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString92 = rEString79.makeRange(rEString84, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString93 = rEString76.makeAddOne(rEString79);
        st1920.automaton.REString rEString94 = rEString64.makeAddBeta(rEString79);
        java.lang.String str95 = rEString94.string;
        st1920.automaton.REString rEString96 = rEString3.makePlus(rEString94);
        st1920.automaton.REString rEString97 = rEString94.makeOne();
        java.lang.String str98 = rEString94.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "hi!b" + "'", str95.equals("hi!b"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str98 + "' != '" + "hi!b" + "'", str98.equals("hi!b"));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString1.makeDot();
        st1920.automaton.REString rEString29 = rEString1.makeDot();
        st1920.automaton.REString rEString30 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString32 = rEString1.makeBracesComma(rEString30, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString92 = rEString79.makeRange(rEString84, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString93 = rEString76.makeAddOne(rEString79);
        st1920.automaton.REString rEString94 = rEString64.makeAddBeta(rEString79);
        java.lang.String str95 = rEString94.string;
        st1920.automaton.REString rEString96 = rEString3.makePlus(rEString94);
        st1920.automaton.REString rEString97 = rEString94.makeOne();
        st1920.automaton.REString rEString98 = rEString94.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "hi!b" + "'", str95.equals("hi!b"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = rEString16.makeQuestionMark(rEString18);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString18.makeBraces(rEString34, 1);
        st1920.automaton.REString rEString37 = rEString1.makeAddAlpha(rEString34);
        st1920.automaton.REString rEString38 = rEString1.makeAlpha();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString40.makeAddOne(rEString43);
        st1920.automaton.REString rEString58 = rEString38.makeAsterisk(rEString57);
        java.lang.String str59 = rEString58.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!1*" + "'", str59.equals("hi!1*"));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeBeta();
        st1920.automaton.REString rEString32 = rEString30.makeString();
        st1920.automaton.REString rEString33 = rEString32.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString43.makeHash();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString30.makeConcatenation(rEString43, rEString46);
        st1920.automaton.REString rEString91 = rEString2.makeBraces(rEString89, (int) (short) 0);
        java.lang.String str92 = rEString89.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str92 + "' != '" + "[^hi!]hi!" + "'", str92.equals("[^hi!]hi!"));
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString16.makeAnd(rEString32, rEString41);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString57 = rEString44.makeRange(rEString49, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString58 = rEString16.makeTilde(rEString44);
        st1920.automaton.REString rEString59 = rEString58.makeDot();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString77 = rEString64.makeRange(rEString69, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = rEString61.makeAddOne(rEString64);
        st1920.automaton.REString rEString79 = rEString58.makeAddBeta(rEString78);
        rEString78.string = "@";
        st1920.automaton.REString rEString82 = rEString14.makeAsterisk(rEString78);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        java.lang.String str86 = rEString85.string;
        st1920.automaton.REString rEString87 = rEString82.makeAddOne(rEString85);
        st1920.automaton.REString rEString88 = rEString87.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str86 + "' != '" + "\"string\"" + "'", str86.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString40 = rEString39.makeHash();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString68 = rEString42.makeAnd(rEString58, rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString83 = rEString70.makeRange(rEString75, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = rEString42.makeTilde(rEString70);
        st1920.automaton.REString rEString85 = rEString26.makeConcatenation(rEString39, rEString42);
        java.lang.Class<?> wildcardClass86 = rEString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString34 = rEString27.makeOne();
        rEString27.string = "hi!<-1-100>&hi!|hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString40 = rEString39.makeHash();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString68 = rEString42.makeAnd(rEString58, rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString83 = rEString70.makeRange(rEString75, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = rEString42.makeTilde(rEString70);
        st1920.automaton.REString rEString85 = rEString26.makeConcatenation(rEString39, rEString42);
        st1920.automaton.REString rEString86 = rEString39.makeAt();
        java.lang.String str87 = rEString86.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "@" + "'", str87.equals("@"));
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString43.makeHash();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString30.makeConcatenation(rEString43, rEString46);
        st1920.automaton.REString rEString91 = rEString2.makeBraces(rEString89, (int) (short) 0);
        java.lang.Class<?> wildcardClass92 = rEString91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString6.makeBeta();
        st1920.automaton.REString rEString10 = rEString9.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        st1920.automaton.REString rEString74 = rEString71.makeString();
        st1920.automaton.REString rEString75 = rEString74.makeDot();
        st1920.automaton.REString rEString76 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString77 = rEString74.makePlus(rEString76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString30 = rEString20.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString31 = rEString10.makeAsterisk(rEString20);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString37 = rEString31.makeBracesTwoInts(rEString34, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString47 = rEString41.makeDot();
        st1920.automaton.REString rEString48 = rEString41.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString75 = rEString65.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString76 = rEString55.makeAsterisk(rEString65);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString82 = rEString76.makeBracesTwoInts(rEString79, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString84 = rEString41.makeBracesComma(rEString79, 1);
        st1920.automaton.REString rEString86 = rEString37.makeBracesComma(rEString84, (int) '#');
        st1920.automaton.REString rEString89 = rEString3.makeRange(rEString37, (int) 'a', 0);
        st1920.automaton.REString rEString90 = rEString3.makeString();
        st1920.automaton.REString rEString91 = rEString3.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        st1920.automaton.REString rEString57 = rEString44.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeString();
        rEString73.string = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString54.makeAt();
        java.lang.String str87 = rEString86.string;
        rEString86.string = "";
        java.lang.String str90 = rEString86.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str87 + "' != '" + "@" + "'", str87.equals("@"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "" + "'", str90.equals(""));
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString34 = rEString27.makeOne();
        st1920.automaton.REString rEString35 = rEString34.makeOne();
        st1920.automaton.REString rEString36 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString37 = rEString34.makePlus(rEString36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        st1920.automaton.REString rEString73 = rEString29.makeDot();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString84 = rEString29.makeBraces(rEString77, 100);
        java.lang.String str85 = rEString84.string;
        st1920.automaton.REString rEString86 = rEString84.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "hi!{100}" + "'", str85.equals("hi!{100}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("a");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString13 = rEString3.makeSquareBracketsTilde(rEString7);
        st1920.automaton.REString rEString14 = rEString13.makeHash();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeAsterisk(rEString29);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString1.makeAsterisk(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        java.lang.Class<?> wildcardClass19 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString46 = rEString44.makeBeta();
        st1920.automaton.REString rEString47 = rEString44.makeHash();
        st1920.automaton.REString rEString48 = rEString44.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeQuestionMark(rEString65);
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString81 = rEString80.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        rEString3.string = "[^hi!]?";
        st1920.automaton.REString rEString11 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString12 = rEString3.makeAddBeta(rEString11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString24.makeAt();
        st1920.automaton.REString rEString56 = rEString24.makeHash();
        st1920.automaton.REString rEString57 = rEString24.makeOne();
        st1920.automaton.REString rEString58 = null;
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString60.makeDot();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString86 = rEString79.makeOr(rEString81, rEString84);
        st1920.automaton.REString rEString89 = rEString76.makeRange(rEString81, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString90 = rEString81.makeOne();
        st1920.automaton.REString rEString92 = rEString74.makeBracesComma(rEString90, (int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString93 = rEString24.makeOr(rEString58, rEString74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString29.makeOne();
        st1920.automaton.REString rEString73 = rEString29.makeAt();
        st1920.automaton.REString rEString74 = rEString27.makeTilde(rEString29);
        st1920.automaton.REString rEString75 = rEString74.makeAt();
        st1920.automaton.REString rEString76 = rEString75.makeBeta();
        rEString76.string = "hi!<1--1>";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString81 = rEString79.makeBeta();
        st1920.automaton.REString rEString82 = rEString79.makeAlpha();
        st1920.automaton.REString rEString83 = rEString82.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString2 = rEString1.makeHash();
        st1920.automaton.REString rEString3 = rEString1.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString18.makeSquareBracketsTilde(rEString22);
        st1920.automaton.REString rEString29 = rEString8.makeAsterisk(rEString18);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString35 = rEString29.makeBracesTwoInts(rEString32, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString39.makeDot();
        st1920.automaton.REString rEString46 = rEString39.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString73 = rEString63.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString74 = rEString53.makeAsterisk(rEString63);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString80 = rEString74.makeBracesTwoInts(rEString77, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString82 = rEString39.makeBracesComma(rEString77, 1);
        st1920.automaton.REString rEString84 = rEString35.makeBracesComma(rEString82, (int) '#');
        st1920.automaton.REString rEString85 = rEString1.makeAddBeta(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString92 = rEString79.makeRange(rEString84, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString93 = rEString76.makeAddOne(rEString79);
        st1920.automaton.REString rEString94 = rEString64.makeAddBeta(rEString79);
        java.lang.String str95 = rEString94.string;
        st1920.automaton.REString rEString96 = rEString3.makePlus(rEString94);
        st1920.automaton.REString rEString97 = rEString94.makeOne();
        st1920.automaton.REString rEString98 = rEString97.makeBeta();
        st1920.automaton.REString rEString99 = rEString98.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "hi!b" + "'", str95.equals("hi!b"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        rEString5.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString14 = rEString5.makeAlpha();
        rEString5.string = "~hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = rEString44.makeQuestionMark(rEString46);
        st1920.automaton.REString rEString61 = rEString60.makeOne();
        st1920.automaton.REString rEString62 = rEString60.makeAlpha();
        st1920.automaton.REString rEString63 = rEString28.makeAddOne(rEString60);
        st1920.automaton.REString rEString64 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString66 = rEString28.makeBracesComma(rEString64, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString6.makeDot();
        st1920.automaton.REString rEString13 = rEString6.makeString();
        st1920.automaton.REString rEString14 = rEString2.makeSquareBrackets(rEString13);
        st1920.automaton.REString rEString15 = rEString13.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString21 = rEString11.makeSquareBracketsTilde(rEString15);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString32 = rEString21.makeBraces(rEString28, (int) '4');
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString32.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString37 = rEString36.makeDot();
        st1920.automaton.REString rEString38 = rEString9.makeAddOne(rEString36);
        st1920.automaton.REString rEString39 = rEString36.makeDot();
        java.lang.String str40 = rEString36.string;
        java.lang.Class<?> wildcardClass41 = rEString36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "[^hi!]" + "'", str40.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString67 = rEString63.makeTilde(rEString66);
        java.lang.String str68 = rEString63.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str68 + "' != '" + "11" + "'", str68.equals("11"));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString21 = rEString11.makeSquareBracketsTilde(rEString15);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString32 = rEString21.makeBraces(rEString28, (int) '4');
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString32.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString37 = rEString36.makeDot();
        st1920.automaton.REString rEString38 = rEString9.makeAddOne(rEString36);
        st1920.automaton.REString rEString39 = rEString36.makeDot();
        st1920.automaton.REString rEString40 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString41 = rEString36.makeTilde(rEString40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString35 = rEString16.makeDot();
        java.lang.String str36 = rEString35.string;
        java.lang.String str37 = rEString35.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "." + "'", str36.equals("."));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "." + "'", str37.equals("."));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeAsterisk(rEString72);
        st1920.automaton.REString rEString74 = rEString73.makeBeta();
        st1920.automaton.REString rEString75 = rEString73.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString85 = rEString82.makeBeta();
        st1920.automaton.REString rEString86 = rEString85.makeDot();
        st1920.automaton.REString rEString87 = rEString75.makeQuestionMark(rEString86);
        st1920.automaton.REString rEString88 = rEString1.makeQuestionMark(rEString75);
        st1920.automaton.REString rEString89 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString92 = rEString75.makeBracesTwoInts(rEString89, (int) '#', 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString9 = rEString2.makeOr(rEString4, rEString7);
        st1920.automaton.REString rEString10 = rEString4.makeDot();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = st1920.automaton.MatchString.matches("#", rEString10);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString13 = rEString11.makeOne();
        st1920.automaton.REString rEString14 = rEString13.makeHash();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString45 = rEString29.makeQuestionMark(rEString31);
        st1920.automaton.REString rEString46 = rEString31.makeDot();
        st1920.automaton.REString rEString49 = rEString14.makeRange(rEString46, 10, (int) (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString63.makeHash();
        st1920.automaton.REString rEString66 = rEString63.makeDot();
        st1920.automaton.REString rEString67 = rEString66.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString21 = rEString11.makeSquareBracketsTilde(rEString15);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString32 = rEString21.makeBraces(rEString28, (int) '4');
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString32.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString37 = rEString36.makeDot();
        st1920.automaton.REString rEString38 = rEString9.makeAddOne(rEString36);
        st1920.automaton.REString rEString39 = rEString36.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = st1920.automaton.MatchString.matches("hi!{10,0}", rEString6);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString27 = rEString22.makeOne();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString50 = rEString39.makeBraces(rEString46, (int) '4');
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString27.makeSquareBrackets(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString1.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString24 = rEString11.makeRange(rEString16, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString26.makeAnd(rEString42, rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString68 = rEString26.makeTilde(rEString54);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString71.makeAddOne(rEString74);
        st1920.automaton.REString rEString89 = rEString68.makeAddBeta(rEString88);
        rEString88.string = "@";
        st1920.automaton.REString rEString92 = rEString24.makeAsterisk(rEString88);
        st1920.automaton.REString rEString93 = rEString1.makeAddBeta(rEString92);
        st1920.automaton.REString rEString94 = rEString93.makeAt();
        st1920.automaton.REString rEString95 = rEString94.makeOne();
        java.lang.Class<?> wildcardClass96 = rEString95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString67 = rEString56.makeBraces(rEString63, (int) '4');
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString67.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString73 = rEString30.makeBraces(rEString71, (int) '#');
        rEString73.string = "@";
        st1920.automaton.REString rEString76 = rEString73.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = st1920.automaton.MatchString.matches("1", rEString73);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString6.makeBeta();
        st1920.automaton.REString rEString10 = rEString9.makeDot();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString12.makeAnd(rEString28, rEString37);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString50 = rEString40.makeSquareBracketsTilde(rEString44);
        st1920.automaton.REString rEString51 = rEString50.makeHash();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString69 = rEString56.makeRange(rEString61, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString78 = rEString71.makeOr(rEString73, rEString76);
        st1920.automaton.REString rEString79 = rEString53.makeAnd(rEString69, rEString78);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString94 = rEString81.makeRange(rEString86, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString95 = rEString53.makeTilde(rEString81);
        st1920.automaton.REString rEString96 = rEString37.makeConcatenation(rEString50, rEString53);
        st1920.automaton.REString rEString97 = rEString9.makeSquareBrackets(rEString53);
        java.lang.Class<?> wildcardClass98 = rEString97.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        java.lang.String str9 = rEString8.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!|hi!" + "'", str9.equals("hi!|hi!"));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString31.makeOne();
        rEString31.string = "\"string\"{-1,32}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString25 = rEString15.makeSquareBracketsTilde(rEString19);
        st1920.automaton.REString rEString27 = rEString13.makeBracesComma(rEString19, (int) ' ');
        st1920.automaton.REString rEString28 = rEString11.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString29 = rEString19.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        java.lang.String str81 = rEString80.string;
        st1920.automaton.REString rEString82 = rEString80.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "1" + "'", str81.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString20 = rEString10.makeSquareBracketsTilde(rEString14);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString31 = rEString20.makeBraces(rEString27, (int) '4');
        st1920.automaton.REString rEString32 = rEString8.makeAddAlpha(rEString27);
        st1920.automaton.REString rEString33 = rEString27.makeDot();
        st1920.automaton.REString rEString34 = rEString33.makeBeta();
        st1920.automaton.REString rEString35 = rEString33.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = rEString44.makeQuestionMark(rEString46);
        st1920.automaton.REString rEString61 = rEString60.makeOne();
        st1920.automaton.REString rEString62 = rEString60.makeAlpha();
        st1920.automaton.REString rEString63 = rEString28.makeAddOne(rEString60);
        java.lang.Class<?> wildcardClass64 = rEString60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString17.makeAddBeta(rEString32);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString50.makeAt();
        st1920.automaton.REString rEString52 = rEString51.makeAt();
        st1920.automaton.REString rEString53 = rEString51.makeBeta();
        st1920.automaton.REString rEString54 = rEString17.makePlus(rEString53);
        st1920.automaton.REString rEString55 = rEString17.makeAlpha();
        st1920.automaton.REString rEString56 = rEString55.makeAlpha();
        st1920.automaton.REString rEString57 = rEString55.makeOne();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString72.makeQuestionMark(rEString74);
        st1920.automaton.REString rEString89 = rEString88.makeOne();
        st1920.automaton.REString rEString90 = rEString88.makeBeta();
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString92 = rEString57.makeSquareBrackets(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString14 = rEString4.makeSquareBracketsTilde(rEString8);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString25 = rEString14.makeBraces(rEString21, (int) '4');
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString25.makeSquareBracketsTilde(rEString27);
        java.lang.String str30 = rEString27.string;
        st1920.automaton.REString rEString33 = rEString2.makeRange(rEString27, (-1), (int) (byte) 1);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString63.makeAddOne(rEString66);
        st1920.automaton.REString rEString81 = rEString35.makeAddAlpha(rEString80);
        st1920.automaton.REString rEString82 = rEString33.makeSquareBrackets(rEString80);
        st1920.automaton.REString rEString83 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString84 = rEString80.makeSquareBracketsTilde(rEString83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString26.makeOne();
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString41 = rEString31.makeSquareBracketsTilde(rEString35);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString52 = rEString41.makeBraces(rEString48, (int) '4');
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString52.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString58.makeAnd(rEString74, rEString83);
        st1920.automaton.REString rEString86 = rEString54.makeBraces(rEString74, 0);
        st1920.automaton.REString rEString87 = rEString74.makeAlpha();
        st1920.automaton.REString rEString88 = rEString74.makeBeta();
        st1920.automaton.REString rEString90 = rEString29.makeBraces(rEString88, (int) (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = rEString16.makeQuestionMark(rEString18);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString18.makeBraces(rEString34, 1);
        st1920.automaton.REString rEString37 = rEString1.makeAddAlpha(rEString34);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString47 = rEString41.makeDot();
        st1920.automaton.REString rEString48 = rEString41.makeString();
        st1920.automaton.REString rEString49 = rEString41.makeString();
        st1920.automaton.REString rEString50 = rEString41.makeBeta();
        st1920.automaton.REString rEString51 = rEString50.makeAlpha();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("b");
        st1920.automaton.REString rEString54 = rEString1.makeOr(rEString51, rEString53);
        rEString51.string = "hi!<-1-100>b";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString72.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString93 = rEString82.makeBraces(rEString89, (int) '4');
        st1920.automaton.REString rEString94 = rEString69.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString94.makeHash();
        st1920.automaton.REString rEString96 = rEString94.makeAlpha();
        st1920.automaton.REString rEString97 = rEString96.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString49 = rEString46.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString64.makeQuestionMark(rEString66);
        st1920.automaton.REString rEString81 = rEString46.makeQuestionMark(rEString64);
        st1920.automaton.REString rEString82 = rEString81.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString18 = rEString12.makeDot();
        st1920.automaton.REString rEString19 = rEString12.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString34 = rEString21.makeRange(rEString26, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString26.makeAsterisk(rEString36);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString53 = rEString47.makeBracesTwoInts(rEString50, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString55 = rEString12.makeBracesComma(rEString50, 1);
        st1920.automaton.REString rEString56 = rEString8.makeAddAlpha(rEString50);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString58.makeAnd(rEString74, rEString83);
        st1920.automaton.REString rEString85 = rEString8.makeAddAlpha(rEString74);
        java.lang.Class<?> wildcardClass86 = rEString8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString36 = rEString10.makeAnd(rEString26, rEString35);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = rEString10.makeTilde(rEString38);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString64 = rEString54.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString75 = rEString64.makeBraces(rEString71, (int) '4');
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString75.makeSquareBracketsTilde(rEString77);
        st1920.automaton.REString rEString81 = rEString38.makeBraces(rEString79, (int) '#');
        st1920.automaton.REString rEString82 = rEString3.makeTilde(rEString79);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString85 = rEString3.makeSquareBracketsTilde(rEString84);
        st1920.automaton.REString rEString86 = rEString84.makeBeta();
        java.lang.Class<?> wildcardClass87 = rEString86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString12 = rEString3.makeBeta();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString22 = rEString16.makeDot();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString26.makeOr(rEString28, rEString31);
        st1920.automaton.REString rEString34 = rEString24.makeSquareBracketsTilde(rEString28);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString45 = rEString34.makeBraces(rEString41, (int) '4');
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString45.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString50 = rEString49.makeDot();
        st1920.automaton.REString rEString51 = rEString22.makeAddOne(rEString49);
        st1920.automaton.REString rEString52 = rEString49.makeDot();
        st1920.automaton.REString rEString53 = rEString49.makeBeta();
        st1920.automaton.REString rEString55 = rEString3.makeBraces(rEString49, (int) (short) 100);
        st1920.automaton.REString rEString56 = rEString49.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString30.makeBeta();
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString34 = rEString33.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeBeta();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString41.makeQuestionMark(rEString43);
        st1920.automaton.REString rEString58 = rEString43.makeDot();
        st1920.automaton.REString rEString60 = rEString25.makeBracesComma(rEString58, (int) (short) -1);
        st1920.automaton.REString rEString61 = rEString22.makePlus(rEString25);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("b");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString74.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString95 = rEString84.makeBraces(rEString91, (int) '4');
        st1920.automaton.REString rEString96 = rEString72.makeAddAlpha(rEString91);
        st1920.automaton.REString rEString97 = rEString25.makeOr(rEString63, rEString72);
        st1920.automaton.REString rEString98 = rEString25.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = rEString16.makeQuestionMark(rEString18);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString18.makeBraces(rEString34, 1);
        st1920.automaton.REString rEString37 = rEString1.makeAddAlpha(rEString34);
        st1920.automaton.REString rEString38 = rEString1.makeAlpha();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString56 = rEString43.makeRange(rEString48, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString57 = rEString40.makeAddOne(rEString43);
        st1920.automaton.REString rEString58 = rEString38.makeAsterisk(rEString57);
        st1920.automaton.REString rEString59 = rEString38.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString46 = rEString44.makeBeta();
        st1920.automaton.REString rEString47 = rEString44.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString17.makeAddBeta(rEString32);
        st1920.automaton.REString rEString48 = rEString32.makeBeta();
        rEString48.string = "hi!b";
        st1920.automaton.REString rEString51 = rEString48.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("11");
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        rEString56.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString61.makeAt();
        st1920.automaton.REString rEString63 = rEString56.makeQuestionMark(rEString61);
        st1920.automaton.REString rEString64 = rEString63.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString1.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString24 = rEString11.makeRange(rEString16, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString26.makeAnd(rEString42, rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString68 = rEString26.makeTilde(rEString54);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString71.makeAddOne(rEString74);
        st1920.automaton.REString rEString89 = rEString68.makeAddBeta(rEString88);
        rEString88.string = "@";
        st1920.automaton.REString rEString92 = rEString24.makeAsterisk(rEString88);
        st1920.automaton.REString rEString93 = rEString1.makeAddBeta(rEString92);
        st1920.automaton.REString rEString94 = rEString93.makeAt();
        st1920.automaton.REString rEString95 = rEString94.makeOne();
        rEString95.string = "[^hi!]";
        st1920.automaton.REString rEString98 = rEString95.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString17.makeAnd(rEString33, rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString59 = rEString17.makeTilde(rEString45);
        st1920.automaton.REString rEString60 = rEString59.makeDot();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString62.makeAddOne(rEString65);
        st1920.automaton.REString rEString80 = rEString59.makeAddBeta(rEString79);
        rEString79.string = "@";
        st1920.automaton.REString rEString83 = rEString15.makeAsterisk(rEString79);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = st1920.automaton.MatchString.matches("a", rEString15);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("[^hi!]");
        rEString2.string = "#";
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = st1920.automaton.MatchString.matches("hi!1*", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString44 = rEString43.makeHash();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString46.makeAnd(rEString62, rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString46.makeTilde(rEString74);
        st1920.automaton.REString rEString89 = rEString30.makeConcatenation(rEString43, rEString46);
        st1920.automaton.REString rEString91 = rEString2.makeBraces(rEString89, (int) (short) 0);
        st1920.automaton.REString rEString92 = rEString2.makeHash();
        st1920.automaton.REString rEString93 = rEString2.makeAlpha();
        rEString2.string = "hi!{100}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        java.lang.String str45 = rEString44.string;
        java.lang.String str46 = rEString44.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "1" + "'", str45.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "1" + "'", str46.equals("1"));
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        java.lang.String str72 = rEString69.string;
        st1920.automaton.REString rEString73 = rEString69.makeAt();
        java.lang.String str74 = rEString69.string;
        st1920.automaton.REString rEString75 = rEString69.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[^hi!]" + "'", str72.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "[^hi!]" + "'", str74.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        st1920.automaton.REString rEString74 = rEString71.makeString();
        java.lang.String str75 = rEString74.string;
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString90 = rEString77.makeRange(rEString82, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString91 = rEString74.makeTilde(rEString82);
        st1920.automaton.REString rEString92 = rEString74.makeAlpha();
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString95 = rEString92.makePlus(rEString94);
        st1920.automaton.REString rEString96 = rEString95.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "\"string\"" + "'", str75.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString14 = rEString4.makeSquareBracketsTilde(rEString8);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString25 = rEString14.makeBraces(rEString21, (int) '4');
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString25.makeSquareBracketsTilde(rEString27);
        java.lang.String str30 = rEString27.string;
        st1920.automaton.REString rEString33 = rEString2.makeRange(rEString27, (-1), (int) (byte) 1);
        rEString33.string = "\"string\"";
        java.lang.Class<?> wildcardClass36 = rEString33.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString12.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString24 = rEString23.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = st1920.automaton.MatchString.matches("[^hi!]", rEString23);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString34 = rEString27.makeOne();
        st1920.automaton.REString rEString35 = rEString34.makeOne();
        st1920.automaton.REString rEString36 = rEString35.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        st1920.automaton.REString rEString4 = rEString2.makeAlpha();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString16 = rEString6.makeSquareBracketsTilde(rEString10);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString27 = rEString16.makeBraces(rEString23, (int) '4');
        st1920.automaton.REString rEString28 = rEString27.makeBeta();
        st1920.automaton.REString rEString31 = rEString2.makeBracesTwoInts(rEString28, 10, (int) ' ');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString1.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString24 = rEString11.makeRange(rEString16, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString26.makeAnd(rEString42, rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString68 = rEString26.makeTilde(rEString54);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString71.makeAddOne(rEString74);
        st1920.automaton.REString rEString89 = rEString68.makeAddBeta(rEString88);
        rEString88.string = "@";
        st1920.automaton.REString rEString92 = rEString24.makeAsterisk(rEString88);
        st1920.automaton.REString rEString93 = rEString1.makeAddBeta(rEString92);
        st1920.automaton.REString rEString94 = rEString93.makeAt();
        st1920.automaton.REString rEString95 = rEString94.makeOne();
        st1920.automaton.REString rEString96 = rEString95.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        java.lang.String str48 = rEString1.string;
        st1920.automaton.REString rEString49 = rEString1.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString9 = rEString2.makeOr(rEString4, rEString7);
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString11.makeAnd(rEString27, rEString36);
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString52 = rEString39.makeRange(rEString44, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = rEString11.makeTilde(rEString39);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString39.makeBraces(rEString80, (int) '#');
        st1920.automaton.REString rEString83 = rEString4.makeTilde(rEString80);
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString86 = rEString4.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString87 = rEString85.makeBeta();
        st1920.automaton.REString rEString88 = rEString85.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = st1920.automaton.MatchString.matches(".", rEString88);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString14 = rEString4.makeSquareBracketsTilde(rEString8);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString25 = rEString14.makeBraces(rEString21, (int) '4');
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString25.makeSquareBracketsTilde(rEString27);
        java.lang.String str30 = rEString27.string;
        st1920.automaton.REString rEString33 = rEString2.makeRange(rEString27, (-1), (int) (byte) 1);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString48 = rEString35.makeRange(rEString40, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString40.makeAsterisk(rEString50);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString67 = rEString61.makeBracesTwoInts(rEString64, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString85 = rEString72.makeRange(rEString77, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString93 = rEString92.makeString();
        st1920.automaton.REString rEString94 = rEString87.makeOr(rEString89, rEString92);
        st1920.automaton.REString rEString95 = rEString69.makeAnd(rEString85, rEString94);
        st1920.automaton.REString rEString96 = rEString94.makeOne();
        st1920.automaton.REString rEString97 = rEString67.makeAddOne(rEString96);
        st1920.automaton.REString rEString98 = rEString33.makeAddAlpha(rEString96);
        java.lang.Class<?> wildcardClass99 = rEString98.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        rEString56.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString61.makeAt();
        st1920.automaton.REString rEString63 = rEString56.makeQuestionMark(rEString61);
        java.lang.String str64 = rEString63.string;
        st1920.automaton.REString rEString65 = rEString63.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "\"string\"?" + "'", str64.equals("\"string\"?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString46 = rEString44.makeBeta();
        st1920.automaton.REString rEString47 = rEString44.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeHash();
        st1920.automaton.REString rEString29 = rEString28.makeAt();
        rEString29.string = "@";
        st1920.automaton.REString rEString32 = rEString29.makeDot();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString42 = rEString36.makeDot();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString65 = rEString54.makeBraces(rEString61, (int) '4');
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString65.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString70 = rEString69.makeDot();
        st1920.automaton.REString rEString71 = rEString42.makeAddOne(rEString69);
        st1920.automaton.REString rEString72 = rEString69.makeDot();
        st1920.automaton.REString rEString73 = rEString29.makeAddOne(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString12 = rEString3.makeBeta();
        st1920.automaton.REString rEString13 = rEString12.makeAlpha();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString23 = rEString17.makeDot();
        st1920.automaton.REString rEString24 = rEString17.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString39 = rEString26.makeRange(rEString31, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString51 = rEString41.makeSquareBracketsTilde(rEString45);
        st1920.automaton.REString rEString52 = rEString31.makeAsterisk(rEString41);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString58 = rEString52.makeBracesTwoInts(rEString55, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString60 = rEString17.makeBracesComma(rEString55, 1);
        st1920.automaton.REString rEString61 = rEString55.makeOne();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString68.makeBeta();
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString12.makeAnd(rEString55, rEString72);
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString85 = rEString75.makeSquareBracketsTilde(rEString79);
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString92 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString93 = rEString92.makeString();
        st1920.automaton.REString rEString94 = rEString87.makeOr(rEString89, rEString92);
        st1920.automaton.REString rEString96 = rEString85.makeBraces(rEString92, (int) '4');
        st1920.automaton.REString rEString97 = rEString12.makeAsterisk(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("#");
        st1920.automaton.REString rEString2 = rEString1.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeHash();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString54 = rEString33.makeAsterisk(rEString43);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString60 = rEString54.makeBracesTwoInts(rEString57, (int) (byte) -1, (int) ' ');
        java.lang.String str61 = rEString60.string;
        st1920.automaton.REString rEString62 = rEString26.makeSquareBrackets(rEString60);
        st1920.automaton.REString rEString63 = rEString26.makeBeta();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString75 = rEString65.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString86 = rEString75.makeBraces(rEString82, (int) '4');
        st1920.automaton.REString rEString87 = rEString86.makeBeta();
        st1920.automaton.REString rEString88 = rEString3.makeOr(rEString63, rEString86);
        st1920.automaton.REString rEString89 = rEString86.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "\"string\"{-1,32}" + "'", str61.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString17.makeAddBeta(rEString32);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString50.makeAt();
        st1920.automaton.REString rEString52 = rEString51.makeAt();
        st1920.automaton.REString rEString53 = rEString51.makeBeta();
        st1920.automaton.REString rEString54 = rEString17.makePlus(rEString53);
        st1920.automaton.REString rEString55 = rEString17.makeAlpha();
        st1920.automaton.REString rEString56 = rEString55.makeAlpha();
        st1920.automaton.REString rEString57 = rEString55.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString80.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString17.makeBraces(rEString33, 1);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString47 = rEString37.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString48 = rEString47.makeAt();
        st1920.automaton.REString rEString49 = rEString33.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString64.makeQuestionMark(rEString66);
        st1920.automaton.REString rEString81 = rEString47.makeAddBeta(rEString80);
        st1920.automaton.REString rEString82 = rEString47.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = st1920.automaton.MatchString.matches("hi!1*", rEString47);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        java.lang.String str45 = rEString44.string;
        java.lang.Class<?> wildcardClass46 = rEString44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "1" + "'", str45.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!{10,0}");
        st1920.automaton.REString rEString2 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString3 = rEString1.makeAddOne(rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString85 = rEString81.makeAt();
        st1920.automaton.REString rEString86 = rEString3.makeAddBeta(rEString85);
        st1920.automaton.REString rEString87 = rEString3.makeOne();
        st1920.automaton.REString rEString88 = rEString87.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString30 = rEString20.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString41 = rEString30.makeBraces(rEString37, (int) '4');
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString41.makeSquareBracketsTilde(rEString43);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString57 = rEString47.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString68 = rEString57.makeBraces(rEString64, (int) '4');
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString68.makeSquareBracketsTilde(rEString70);
        st1920.automaton.REString rEString73 = rEString43.makeSquareBracketsTilde(rEString70);
        st1920.automaton.REString rEString74 = rEString43.makeAt();
        st1920.automaton.REString rEString75 = rEString18.makeSquareBrackets(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString27 = rEString22.makeOne();
        java.lang.Class<?> wildcardClass28 = rEString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        java.lang.String str12 = rEString11.string;
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString24 = rEString14.makeSquareBracketsTilde(rEString18);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString26.makeOr(rEString28, rEString31);
        st1920.automaton.REString rEString35 = rEString24.makeBraces(rEString31, (int) '4');
        st1920.automaton.REString rEString36 = rEString35.makeBeta();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString54 = rEString41.makeRange(rEString46, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString69 = rEString56.makeRange(rEString61, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString70 = rEString54.makeQuestionMark(rEString56);
        st1920.automaton.REString rEString71 = rEString56.makeDot();
        st1920.automaton.REString rEString73 = rEString38.makeBracesComma(rEString71, (int) (short) -1);
        st1920.automaton.REString rEString74 = rEString35.makePlus(rEString38);
        st1920.automaton.REString rEString77 = rEString11.makeBracesTwoInts(rEString74, (int) (byte) 10, 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "\"string\"" + "'", str12.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        java.lang.String str45 = rEString44.string;
        st1920.automaton.REString rEString46 = rEString44.makeBeta();
        java.lang.Class<?> wildcardClass47 = rEString44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "1" + "'", str45.equals("1"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        st1920.automaton.REString rEString45 = rEString44.makeOne();
        java.lang.String str46 = rEString45.string;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean47 = st1920.automaton.MatchString.matches("hi!{100}", rEString45);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "1" + "'", str46.equals("1"));
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString1.makeDot();
        st1920.automaton.REString rEString29 = rEString1.makeDot();
        st1920.automaton.REString rEString30 = rEString29.makeDot();
        st1920.automaton.REString rEString31 = rEString30.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
    }

    @Test
    public void test353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test353");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString40 = rEString39.makeHash();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString68 = rEString42.makeAnd(rEString58, rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString83 = rEString70.makeRange(rEString75, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = rEString42.makeTilde(rEString70);
        st1920.automaton.REString rEString85 = rEString26.makeConcatenation(rEString39, rEString42);
        rEString85.string = ".";
        st1920.automaton.REString rEString88 = rEString85.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test354");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString24.makeAt();
        st1920.automaton.REString rEString56 = rEString55.makeDot();
        rEString56.string = "\"string\"?";
        java.lang.Class<?> wildcardClass59 = rEString56.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test355");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString84.makeDot();
        st1920.automaton.REString rEString86 = rEString85.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
    }

    @Test
    public void test356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test356");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString30 = rEString29.makeHash();
        st1920.automaton.REString rEString31 = rEString29.makeOne();
        st1920.automaton.REString rEString32 = rEString31.makeAlpha();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString47 = rEString34.makeRange(rEString39, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString39.makeAsterisk(rEString49);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString66 = rEString60.makeBracesTwoInts(rEString63, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString84 = rEString71.makeRange(rEString76, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString94 = rEString68.makeAnd(rEString84, rEString93);
        st1920.automaton.REString rEString95 = rEString93.makeOne();
        st1920.automaton.REString rEString96 = rEString66.makeAddOne(rEString95);
        st1920.automaton.REString rEString97 = rEString31.makeAddOne(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test357");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!1*");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString16 = rEString9.makeOr(rEString11, rEString14);
        st1920.automaton.REString rEString19 = rEString6.makeRange(rEString11, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString29 = rEString3.makeAnd(rEString19, rEString28);
        st1920.automaton.REString rEString30 = rEString19.makeHash();
        st1920.automaton.REString rEString31 = rEString30.makeAt();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString62 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString63 = rEString62.makeBeta();
        st1920.automaton.REString rEString64 = rEString31.makeAddAlpha(rEString62);
        st1920.automaton.REString rEString65 = rEString1.makePlus(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test358");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!<-1-100>b");
    }

    @Test
    public void test359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test359");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString29 = rEString2.makeDot();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = st1920.automaton.MatchString.matches("#", rEString2);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test360");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString72 = rEString51.makeAsterisk(rEString61);
        st1920.automaton.REString rEString73 = rEString44.makeSquareBrackets(rEString51);
        st1920.automaton.REString rEString74 = rEString51.makeBeta();
        st1920.automaton.REString rEString75 = rEString51.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test361");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString32 = rEString15.makeHash();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = st1920.automaton.MatchString.matches("\"string\"{-1,32}", rEString15);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test362");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeOne();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString62 = rEString49.makeRange(rEString54, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString77 = rEString64.makeRange(rEString69, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = rEString62.makeQuestionMark(rEString64);
        st1920.automaton.REString rEString79 = rEString64.makeDot();
        st1920.automaton.REString rEString81 = rEString46.makeBracesComma(rEString79, (int) (short) -1);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString92 = rEString85.makeOr(rEString87, rEString90);
        st1920.automaton.REString rEString93 = rEString83.makeSquareBracketsTilde(rEString87);
        st1920.automaton.REString rEString94 = rEString93.makeHash();
        st1920.automaton.REString rEString95 = rEString93.makeOne();
        st1920.automaton.REString rEString96 = rEString93.makeAlpha();
        st1920.automaton.REString rEString97 = rEString79.makeAddBeta(rEString96);
        st1920.automaton.REString rEString98 = rEString44.makeSquareBrackets(rEString97);
        st1920.automaton.REString rEString99 = rEString97.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test363");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString31.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test364");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString55 = rEString34.makeAsterisk(rEString44);
        st1920.automaton.REString rEString56 = rEString17.makeQuestionMark(rEString34);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString60.makeDot();
        st1920.automaton.REString rEString67 = rEString60.makeOne();
        st1920.automaton.REString rEString68 = rEString60.makeString();
        st1920.automaton.REString rEString69 = rEString56.makeSquareBracketsTilde(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
    }

    @Test
    public void test365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test365");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString29.makeOne();
        st1920.automaton.REString rEString73 = rEString29.makeAt();
        st1920.automaton.REString rEString74 = rEString27.makeTilde(rEString29);
        st1920.automaton.REString rEString75 = rEString74.makeAt();
        st1920.automaton.REString rEString76 = rEString75.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test366");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeHash();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString23 = rEString13.makeSquareBracketsTilde(rEString17);
        st1920.automaton.REString rEString24 = rEString23.makeHash();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString39 = rEString26.makeRange(rEString31, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString40 = rEString24.makeAsterisk(rEString39);
        st1920.automaton.REString rEString41 = rEString40.makeBeta();
        st1920.automaton.REString rEString42 = rEString40.makeString();
        st1920.automaton.REString rEString43 = rEString3.makePlus(rEString42);
        st1920.automaton.REString rEString44 = rEString42.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test367");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString29 = rEString27.makeOne();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString36.makeAsterisk(rEString46);
        st1920.automaton.REString rEString58 = rEString46.makeBeta();
        st1920.automaton.REString rEString60 = rEString27.makeBraces(rEString58, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean61 = st1920.automaton.MatchString.matches("hi!{100}", rEString27);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test368");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString18 = rEString12.makeDot();
        st1920.automaton.REString rEString19 = rEString12.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString34 = rEString21.makeRange(rEString26, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString26.makeAsterisk(rEString36);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString53 = rEString47.makeBracesTwoInts(rEString50, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString55 = rEString12.makeBracesComma(rEString50, 1);
        st1920.automaton.REString rEString56 = rEString8.makeAddAlpha(rEString50);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString76.makeOr(rEString78, rEString81);
        st1920.automaton.REString rEString84 = rEString58.makeAnd(rEString74, rEString83);
        st1920.automaton.REString rEString85 = rEString83.makeOne();
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString89 = rEString88.makeHash();
        st1920.automaton.REString rEString90 = rEString50.makeConcatenation(rEString85, rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
    }

    @Test
    public void test369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test369");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString62 = rEString60.makeOne();
        st1920.automaton.REString rEString63 = rEString33.makeAddOne(rEString62);
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString63.makeHash();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString77 = rEString70.makeOr(rEString72, rEString75);
        st1920.automaton.REString rEString80 = rEString67.makeRange(rEString72, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString81 = rEString63.makeAddBeta(rEString67);
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString94 = rEString88.makeDot();
        st1920.automaton.REString rEString95 = rEString88.makeString();
        st1920.automaton.REString rEString96 = rEString84.makeSquareBrackets(rEString95);
        st1920.automaton.REString rEString97 = rEString84.makeString();
        st1920.automaton.REString rEString98 = rEString97.makeAt();
        st1920.automaton.REString rEString99 = rEString67.makeQuestionMark(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test370");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString20 = rEString10.makeSquareBracketsTilde(rEString14);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString31 = rEString20.makeBraces(rEString27, (int) '4');
        st1920.automaton.REString rEString32 = rEString8.makeAddAlpha(rEString27);
        st1920.automaton.REString rEString33 = rEString27.makeDot();
        st1920.automaton.REString rEString34 = rEString33.makeBeta();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString49 = rEString36.makeRange(rEString41, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString51.makeSquareBracketsTilde(rEString55);
        st1920.automaton.REString rEString62 = rEString41.makeAsterisk(rEString51);
        st1920.automaton.REString rEString64 = rEString34.makeBraces(rEString41, (int) (short) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test371");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        java.lang.String str72 = rEString69.string;
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString76.makeDot();
        st1920.automaton.REString rEString83 = rEString76.makeString();
        st1920.automaton.REString rEString84 = rEString76.makeHash();
        st1920.automaton.REString rEString85 = rEString69.makeAddAlpha(rEString84);
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString85.makeAddAlpha(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str72 + "' != '" + "[^hi!]" + "'", str72.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test372");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        st1920.automaton.REString rEString72 = rEString69.makeDot();
        st1920.automaton.REString rEString73 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString74 = rEString69.makePlus(rEString73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
    }

    @Test
    public void test373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test373");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = rEString44.makeQuestionMark(rEString46);
        st1920.automaton.REString rEString61 = rEString60.makeOne();
        st1920.automaton.REString rEString62 = rEString60.makeAlpha();
        st1920.automaton.REString rEString63 = rEString28.makeAddOne(rEString60);
        java.lang.Class<?> wildcardClass64 = rEString28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test374");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString41 = rEString31.makeSquareBracketsTilde(rEString35);
        st1920.automaton.REString rEString42 = rEString21.makeAsterisk(rEString31);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString48 = rEString42.makeBracesTwoInts(rEString45, (int) (byte) -1, (int) ' ');
        java.lang.String str49 = rEString48.string;
        st1920.automaton.REString rEString50 = rEString14.makeSquareBrackets(rEString48);
        st1920.automaton.REString rEString51 = rEString14.makeBeta();
        st1920.automaton.REString rEString52 = rEString14.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "\"string\"{-1,32}" + "'", str49.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
    }

    @Test
    public void test375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test375");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString18 = rEString12.makeDot();
        st1920.automaton.REString rEString19 = rEString12.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString34 = rEString21.makeRange(rEString26, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString26.makeAsterisk(rEString36);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString53 = rEString47.makeBracesTwoInts(rEString50, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString55 = rEString12.makeBracesComma(rEString50, 1);
        st1920.automaton.REString rEString56 = rEString8.makeAddAlpha(rEString50);
        st1920.automaton.REString rEString57 = rEString8.makeHash();
        st1920.automaton.REString rEString58 = rEString57.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test376");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString59.makeHash();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString60.makeAsterisk(rEString75);
        st1920.automaton.REString rEString79 = rEString46.makeRange(rEString76, (int) (byte) 100, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString79.makeAlpha();
        java.lang.String str81 = rEString80.string;
        st1920.automaton.REString rEString82 = rEString80.makeString();
        st1920.automaton.REString rEString83 = rEString80.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "a" + "'", str81.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test377");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeOne();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        java.lang.Class<?> wildcardClass12 = rEString3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test378");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString49 = rEString46.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString53.makeDot();
        st1920.automaton.REString rEString60 = rEString49.makeAddAlpha(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
    }

    @Test
    public void test379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test379");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString2 = rEString1.makeHash();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        java.lang.String str5 = rEString4.string;
        st1920.automaton.REString rEString6 = rEString2.makeAsterisk(rEString4);
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString18 = rEString8.makeSquareBracketsTilde(rEString12);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString29 = rEString18.makeBraces(rEString25, (int) '4');
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString29.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString61 = rEString31.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = rEString61.makeBeta();
        rEString61.string = "hi!{10,0}";
        st1920.automaton.REString rEString65 = rEString6.makeSquareBrackets(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "hi!" + "'", str5.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test380");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString93.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test381");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString72.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString93 = rEString82.makeBraces(rEString89, (int) '4');
        st1920.automaton.REString rEString94 = rEString69.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString94.makeHash();
        st1920.automaton.REString rEString96 = rEString94.makeDot();
        st1920.automaton.REString rEString97 = rEString96.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test382");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString18 = rEString11.makeOr(rEString13, rEString16);
        st1920.automaton.REString rEString21 = rEString8.makeRange(rEString13, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString31 = rEString5.makeAnd(rEString21, rEString30);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = rEString5.makeTilde(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString70 = rEString59.makeBraces(rEString66, (int) '4');
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString70.makeSquareBracketsTilde(rEString72);
        st1920.automaton.REString rEString76 = rEString33.makeBraces(rEString74, (int) '#');
        st1920.automaton.REString rEString77 = rEString33.makeDot();
        st1920.automaton.REString rEString78 = rEString2.makeQuestionMark(rEString33);
        st1920.automaton.REString rEString79 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString80 = rEString33.makeQuestionMark(rEString79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
    }

    @Test
    public void test383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test383");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString27.makeAt();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString33.makeSquareBracketsTilde(rEString37);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString54 = rEString43.makeBraces(rEString50, (int) '4');
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString54.makeSquareBracketsTilde(rEString56);
        java.lang.String str59 = rEString56.string;
        st1920.automaton.REString rEString62 = rEString31.makeRange(rEString56, (-1), (int) (byte) 1);
        st1920.automaton.REString rEString64 = rEString27.makeBraces(rEString62, (int) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str59 + "' != '" + "hi!" + "'", str59.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test384");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString38 = rEString27.makeBraces(rEString34, (int) '4');
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString38.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString63 = rEString56.makeOr(rEString58, rEString61);
        st1920.automaton.REString rEString65 = rEString54.makeBraces(rEString61, (int) '4');
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString65.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString70 = rEString40.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString71 = rEString7.makeQuestionMark(rEString70);
        st1920.automaton.REString rEString72 = rEString70.makeOne();
        java.lang.String str73 = rEString70.string;
        st1920.automaton.REString rEString74 = rEString70.makeAt();
        st1920.automaton.REString rEString75 = rEString70.makeString();
        st1920.automaton.REString rEString76 = rEString75.makeDot();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString88 = rEString78.makeSquareBracketsTilde(rEString82);
        st1920.automaton.REString rEString89 = rEString88.makeHash();
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        st1920.automaton.REString rEString91 = rEString88.makeAlpha();
        st1920.automaton.REString rEString92 = rEString75.makeAsterisk(rEString88);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = st1920.automaton.MatchString.matches("hi!<-1-100>&hi!|hi!", rEString75);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "[^hi!]" + "'", str73.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
    }

    @Test
    public void test385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test385");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeHash();
        st1920.automaton.REString rEString11 = rEString3.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
    }

    @Test
    public void test386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test386");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString72 = rEString1.makeAddAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString71.makeDot();
        st1920.automaton.REString rEString74 = rEString71.makeString();
        st1920.automaton.REString rEString75 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString76 = rEString74.makeTilde(rEString75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
    }

    @Test
    public void test387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test387");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeHash();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString94 = rEString88.makeDot();
        st1920.automaton.REString rEString95 = rEString88.makeString();
        st1920.automaton.REString rEString96 = rEString88.makeHash();
        st1920.automaton.REString rEString97 = rEString81.makeAddAlpha(rEString96);
        st1920.automaton.REString rEString98 = rEString3.makeSquareBracketsTilde(rEString97);
        st1920.automaton.REString rEString99 = rEString98.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test388");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString29.makeBraces(rEString70, (int) '#');
        rEString72.string = "@";
        st1920.automaton.REString rEString75 = rEString72.makeAlpha();
        st1920.automaton.REString rEString76 = rEString75.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test389");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString72.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString83 = rEString70.makeAddOne(rEString76);
        st1920.automaton.REString rEString84 = rEString83.makeOne();
        rEString83.string = "#";
        st1920.automaton.REString rEString87 = rEString83.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test390");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        rEString18.string = "hi!<1--1>";
        st1920.automaton.REString rEString21 = rEString18.makeAlpha();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString33 = rEString23.makeSquareBracketsTilde(rEString27);
        st1920.automaton.REString rEString34 = rEString33.makeHash();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString49 = rEString36.makeRange(rEString41, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString50 = rEString34.makeAsterisk(rEString49);
        st1920.automaton.REString rEString51 = rEString50.makeBeta();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString63 = rEString53.makeSquareBracketsTilde(rEString57);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString74 = rEString63.makeBraces(rEString70, (int) '4');
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString78 = rEString74.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString80 = rEString50.makeBracesComma(rEString76, (int) (byte) -1);
        st1920.automaton.REString rEString81 = rEString21.makeAddOne(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test391");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString33 = rEString27.makeBracesTwoInts(rEString30, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString37.makeDot();
        st1920.automaton.REString rEString44 = rEString37.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString72 = rEString51.makeAsterisk(rEString61);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString78 = rEString72.makeBracesTwoInts(rEString75, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString80 = rEString37.makeBracesComma(rEString75, 1);
        st1920.automaton.REString rEString82 = rEString33.makeBracesComma(rEString80, (int) '#');
        java.lang.String str83 = rEString82.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str83 + "' != '" + "\"string\"{1,}{35,}" + "'", str83.equals("\"string\"{1,}{35,}"));
    }

    @Test
    public void test392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test392");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString31.makeOne();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString51 = rEString45.makeDot();
        st1920.automaton.REString rEString52 = rEString45.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString78 = rEString71.makeOr(rEString73, rEString76);
        st1920.automaton.REString rEString79 = rEString69.makeSquareBracketsTilde(rEString73);
        st1920.automaton.REString rEString80 = rEString59.makeAsterisk(rEString69);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString86 = rEString80.makeBracesTwoInts(rEString83, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString88 = rEString45.makeBracesComma(rEString83, 1);
        st1920.automaton.REString rEString89 = rEString41.makeAddAlpha(rEString83);
        st1920.automaton.REString rEString90 = rEString41.makeHash();
        st1920.automaton.REString rEString91 = rEString32.makePlus(rEString90);
        rEString91.string = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
    }

    @Test
    public void test393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test393");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeHash();
        rEString11.string = "hi!?";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
    }

    @Test
    public void test394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test394");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString1.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString24 = rEString11.makeRange(rEString16, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString26.makeAnd(rEString42, rEString51);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString68 = rEString26.makeTilde(rEString54);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString87 = rEString74.makeRange(rEString79, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString88 = rEString71.makeAddOne(rEString74);
        st1920.automaton.REString rEString89 = rEString68.makeAddBeta(rEString88);
        rEString88.string = "@";
        st1920.automaton.REString rEString92 = rEString24.makeAsterisk(rEString88);
        st1920.automaton.REString rEString93 = rEString1.makeAddBeta(rEString92);
        st1920.automaton.REString rEString94 = rEString93.makeAt();
        st1920.automaton.REString rEString95 = rEString94.makeOne();
        java.lang.String str96 = rEString95.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "1" + "'", str96.equals("1"));
    }

    @Test
    public void test395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test395");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString28 = rEString16.makeBeta();
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString28.makeDot();
        st1920.automaton.REString rEString31 = rEString28.makeHash();
        java.lang.String str32 = rEString28.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "b" + "'", str32.equals("b"));
    }

    @Test
    public void test396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test396");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        java.lang.Class<?> wildcardClass45 = rEString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test397");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        rEString5.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString29 = rEString15.makeDot();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString45 = rEString36.makeOne();
        st1920.automaton.REString rEString47 = rEString29.makeBracesComma(rEString45, (int) (byte) 10);
        st1920.automaton.REString rEString48 = rEString5.makeSquareBrackets(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test398");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = rEString31.makeQuestionMark(rEString33);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString51 = rEString33.makeBraces(rEString49, 1);
        st1920.automaton.REString rEString52 = rEString16.makeAddAlpha(rEString49);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString80 = rEString54.makeAnd(rEString70, rEString79);
        st1920.automaton.REString rEString81 = rEString70.makeHash();
        st1920.automaton.REString rEString82 = rEString1.makeConcatenation(rEString49, rEString70);
        rEString82.string = "\"string\"{-1,32}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test399");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString28 = rEString16.makeBeta();
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString28.makeDot();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString34.makeDot();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString63 = rEString52.makeBraces(rEString59, (int) '4');
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString63.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString68 = rEString67.makeDot();
        st1920.automaton.REString rEString69 = rEString40.makeAddOne(rEString67);
        st1920.automaton.REString rEString71 = rEString28.makeBracesComma(rEString40, (int) (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test400");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString1.makeDot();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString14.makeAnd(rEString30, rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString59 = rEString42.makeAddOne(rEString45);
        st1920.automaton.REString rEString60 = rEString30.makeAddBeta(rEString45);
        st1920.automaton.REString rEString61 = rEString45.makeBeta();
        st1920.automaton.REString rEString62 = rEString1.makeAddBeta(rEString45);
        st1920.automaton.REString rEString63 = rEString62.makeOne();
        st1920.automaton.REString rEString64 = rEString63.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test401");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString30.makeOne();
        st1920.automaton.REString rEString32 = rEString30.makeDot();
        java.lang.Class<?> wildcardClass33 = rEString32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test402");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString24.makeAt();
        st1920.automaton.REString rEString56 = rEString55.makeDot();
        rEString56.string = "\"string\"?";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString86 = rEString60.makeAnd(rEString76, rEString85);
        st1920.automaton.REString rEString87 = rEString60.makeDot();
        st1920.automaton.REString rEString88 = rEString60.makeDot();
        st1920.automaton.REString rEString89 = rEString56.makePlus(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test403");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString72 = rEString1.makeAddAlpha(rEString71);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString80.makeOr(rEString82, rEString85);
        st1920.automaton.REString rEString90 = rEString77.makeRange(rEString82, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString91 = rEString74.makeAddOne(rEString77);
        st1920.automaton.REString rEString94 = rEString1.makeBracesTwoInts(rEString74, (int) (short) 100, (int) ' ');
        rEString94.string = "hi!{10,0}";
        java.lang.Class<?> wildcardClass97 = rEString94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test404");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString1.makeDot();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString14.makeAnd(rEString30, rEString39);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString59 = rEString42.makeAddOne(rEString45);
        st1920.automaton.REString rEString60 = rEString30.makeAddBeta(rEString45);
        st1920.automaton.REString rEString61 = rEString45.makeBeta();
        st1920.automaton.REString rEString62 = rEString1.makeAddBeta(rEString45);
        st1920.automaton.REString rEString63 = rEString62.makeOne();
        st1920.automaton.REString rEString64 = rEString63.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test405");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString48 = rEString35.makeRange(rEString40, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString58 = rEString32.makeAnd(rEString48, rEString57);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString60.makeAddOne(rEString63);
        st1920.automaton.REString rEString78 = rEString32.makeAddAlpha(rEString77);
        java.lang.String str79 = rEString32.string;
        st1920.automaton.REString rEString81 = rEString16.makeBraces(rEString32, (int) '#');
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString92 = rEString85.makeOr(rEString87, rEString90);
        st1920.automaton.REString rEString93 = rEString83.makeSquareBracketsTilde(rEString87);
        st1920.automaton.REString rEString94 = rEString93.makeHash();
        st1920.automaton.REString rEString95 = rEString93.makeOne();
        st1920.automaton.REString rEString96 = rEString93.makeDot();
        st1920.automaton.REString rEString97 = rEString93.makeOne();
        st1920.automaton.REString rEString98 = rEString16.makeQuestionMark(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "hi!" + "'", str79.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test406");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString18 = rEString12.makeDot();
        st1920.automaton.REString rEString19 = rEString12.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString34 = rEString21.makeRange(rEString26, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString26.makeAsterisk(rEString36);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString53 = rEString47.makeBracesTwoInts(rEString50, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString55 = rEString12.makeBracesComma(rEString50, 1);
        st1920.automaton.REString rEString56 = rEString8.makeAddAlpha(rEString50);
        st1920.automaton.REString rEString57 = rEString8.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString69 = rEString59.makeSquareBracketsTilde(rEString63);
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString78 = rEString71.makeOr(rEString73, rEString76);
        st1920.automaton.REString rEString80 = rEString69.makeBraces(rEString76, (int) '4');
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString80.makeSquareBracketsTilde(rEString82);
        st1920.automaton.REString rEString85 = rEString84.makeDot();
        st1920.automaton.REString rEString88 = rEString57.makeBracesTwoInts(rEString84, (int) (short) 0, (int) (short) 10);
        rEString88.string = "hi!<1--1>";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test407");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString19 = rEString12.makeOr(rEString14, rEString17);
        st1920.automaton.REString rEString22 = rEString9.makeRange(rEString14, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString31 = rEString24.makeOr(rEString26, rEString29);
        st1920.automaton.REString rEString32 = rEString6.makeAnd(rEString22, rEString31);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString47 = rEString34.makeRange(rEString39, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = rEString6.makeTilde(rEString34);
        st1920.automaton.REString rEString49 = rEString6.makeAlpha();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = rEString56.makeOne();
        st1920.automaton.REString rEString66 = rEString56.makeBeta();
        st1920.automaton.REString rEString67 = rEString3.makeAnd(rEString49, rEString56);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean68 = st1920.automaton.MatchString.matches(".", rEString56);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test408");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        rEString48.string = "";
        st1920.automaton.REString rEString77 = rEString46.makeQuestionMark(rEString48);
        st1920.automaton.REString rEString78 = rEString48.makeBeta();
        java.lang.String str79 = rEString48.string;
        rEString48.string = "hi!<1--1>";
        java.lang.String str82 = rEString48.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "hi!<1--1>" + "'", str82.equals("hi!<1--1>"));
    }

    @Test
    public void test409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test409");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString21.makeOr(rEString23, rEString26);
        st1920.automaton.REString rEString31 = rEString18.makeRange(rEString23, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString32 = rEString16.makeQuestionMark(rEString18);
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString36 = rEString18.makeBraces(rEString34, 1);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString48 = rEString38.makeSquareBracketsTilde(rEString42);
        st1920.automaton.REString rEString49 = rEString48.makeAt();
        st1920.automaton.REString rEString50 = rEString34.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString62 = rEString52.makeSquareBracketsTilde(rEString56);
        st1920.automaton.REString rEString63 = rEString62.makeHash();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeAsterisk(rEString78);
        st1920.automaton.REString rEString80 = rEString79.makeBeta();
        st1920.automaton.REString rEString81 = rEString79.makeString();
        st1920.automaton.REString rEString82 = rEString48.makeAddBeta(rEString81);
        st1920.automaton.REString rEString84 = rEString1.makeBracesComma(rEString48, 0);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString89 = rEString88.makeString();
        st1920.automaton.REString rEString91 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString93 = rEString86.makeOr(rEString88, rEString91);
        st1920.automaton.REString rEString94 = rEString86.makeString();
        st1920.automaton.REString rEString95 = rEString1.makeSquareBrackets(rEString94);
        java.lang.String str96 = rEString94.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str96 + "' != '" + "\"string\"" + "'", str96.equals("\"string\""));
    }

    @Test
    public void test410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test410");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString39 = rEString38.makeHash();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString54 = rEString41.makeRange(rEString46, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString55 = rEString39.makeAsterisk(rEString54);
        st1920.automaton.REString rEString56 = rEString55.makeOne();
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString58 = rEString57.makeHash();
        rEString58.string = "";
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString67.makeOne();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString86 = rEString83.makeBeta();
        st1920.automaton.REString rEString87 = rEString86.makeDot();
        st1920.automaton.REString rEString88 = rEString76.makeAddAlpha(rEString86);
        st1920.automaton.REString rEString91 = rEString58.makeRange(rEString86, (-1), (-1));
        st1920.automaton.REString rEString93 = rEString24.makeBraces(rEString58, (int) (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
    }

    @Test
    public void test411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test411");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString28 = rEString27.makeHash();
        st1920.automaton.REString rEString31 = rEString2.makeRange(rEString28, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString32 = rEString28.makeHash();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = st1920.automaton.MatchString.matches("[^hi!]?", rEString32);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test412");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString59.makeHash();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString60.makeAsterisk(rEString75);
        st1920.automaton.REString rEString79 = rEString46.makeRange(rEString76, (int) (byte) 100, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString79.makeAlpha();
        java.lang.String str81 = rEString80.string;
        st1920.automaton.REString rEString82 = rEString80.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str81 + "' != '" + "a" + "'", str81.equals("a"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test413");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString45 = rEString1.makeDot();
        st1920.automaton.REString rEString46 = rEString1.makeAt();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString64.makeQuestionMark(rEString66);
        st1920.automaton.REString rEString81 = rEString66.makeDot();
        st1920.automaton.REString rEString83 = rEString48.makeBracesComma(rEString81, (int) (short) -1);
        st1920.automaton.REString rEString84 = rEString81.makeHash();
        st1920.automaton.REString rEString87 = rEString46.makeRange(rEString81, (int) (short) 100, 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test414");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString69.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
    }

    @Test
    public void test415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test415");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        java.lang.String str48 = rEString1.string;
        rEString1.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString54.makeDot();
        st1920.automaton.REString rEString61 = rEString54.makeString();
        st1920.automaton.REString rEString62 = rEString54.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString76 = rEString66.makeSquareBracketsTilde(rEString70);
        st1920.automaton.REString rEString78 = rEString64.makeBracesComma(rEString70, (int) ' ');
        st1920.automaton.REString rEString79 = rEString62.makeQuestionMark(rEString70);
        st1920.automaton.REString rEString80 = rEString62.makeString();
        st1920.automaton.REString rEString81 = rEString1.makeAddAlpha(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test416");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        rEString5.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString51 = rEString40.makeBraces(rEString47, (int) '4');
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString51.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString78 = rEString67.makeBraces(rEString74, (int) '4');
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString78.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString83 = rEString53.makeSquareBracketsTilde(rEString80);
        st1920.automaton.REString rEString84 = rEString20.makeQuestionMark(rEString83);
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString88.makeOr(rEString90, rEString93);
        st1920.automaton.REString rEString96 = rEString86.makeSquareBracketsTilde(rEString90);
        st1920.automaton.REString rEString97 = rEString84.makeAddOne(rEString90);
        st1920.automaton.REString rEString98 = rEString5.makePlus(rEString84);
        st1920.automaton.REString rEString99 = rEString84.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test417");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString13 = rEString12.makeHash();
        st1920.automaton.REString rEString14 = rEString12.makeOne();
        st1920.automaton.REString rEString15 = rEString12.makeDot();
        st1920.automaton.REString rEString16 = rEString12.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = st1920.automaton.MatchString.matches("hi!|hi!", rEString16);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
    }

    @Test
    public void test418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test418");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("[^hi!]?");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString18.makeSquareBracketsTilde(rEString22);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString39 = rEString28.makeBraces(rEString35, (int) '4');
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString39.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString71 = rEString41.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString8.makeQuestionMark(rEString71);
        st1920.automaton.REString rEString73 = rEString71.makeOne();
        st1920.automaton.REString rEString74 = rEString73.makeAt();
        st1920.automaton.REString rEString75 = rEString73.makeDot();
        st1920.automaton.REString rEString78 = rEString1.makeBracesTwoInts(rEString75, (int) (byte) 1, (int) (short) 1);
        st1920.automaton.REString rEString79 = rEString78.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
    }

    @Test
    public void test419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test419");
        st1920.automaton.REString rEString1 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean2 = st1920.automaton.MatchString.matches(".", rEString1);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
    }

    @Test
    public void test420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test420");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeAsterisk(rEString72);
        st1920.automaton.REString rEString74 = rEString44.makeAddBeta(rEString57);
        st1920.automaton.REString rEString75 = rEString57.makeAt();
        java.lang.Class<?> wildcardClass76 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test421");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!<-1-100>&hi!|hi!");
    }

    @Test
    public void test422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test422");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString82 = rEString72.makeSquareBracketsTilde(rEString76);
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString93 = rEString82.makeBraces(rEString89, (int) '4');
        st1920.automaton.REString rEString94 = rEString69.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString94.makeHash();
        st1920.automaton.REString rEString96 = rEString95.makeString();
        st1920.automaton.REString rEString97 = rEString95.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
    }

    @Test
    public void test423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test423");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString84.makeDot();
        rEString85.string = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
    }

    @Test
    public void test424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test424");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString49.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString60 = rEString59.makeHash();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString75 = rEString62.makeRange(rEString67, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString76 = rEString60.makeAsterisk(rEString75);
        st1920.automaton.REString rEString79 = rEString46.makeRange(rEString76, (int) (byte) 100, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString79.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
    }

    @Test
    public void test425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test425");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString26.makeOne();
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString28.makeHash();
        java.lang.String str31 = rEString30.string;
        java.lang.String str32 = rEString30.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "#" + "'", str31.equals("#"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "#" + "'", str32.equals("#"));
    }

    @Test
    public void test426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test426");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        rEString2.string = "hi!b";
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString35 = rEString22.makeRange(rEString27, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = rEString20.makeQuestionMark(rEString22);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString22.makeBraces(rEString38, 1);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString53 = rEString52.makeAt();
        st1920.automaton.REString rEString54 = rEString38.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString52.makeString();
        st1920.automaton.REString rEString56 = rEString2.makeAddBeta(rEString52);
        st1920.automaton.REString rEString57 = rEString56.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
    }

    @Test
    public void test427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test427");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeHash();
        st1920.automaton.REString rEString29 = rEString28.makeAt();
        st1920.automaton.REString rEString30 = rEString28.makeHash();
        st1920.automaton.REString rEString31 = rEString30.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
    }

    @Test
    public void test428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test428");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString16 = rEString9.makeOr(rEString11, rEString14);
        st1920.automaton.REString rEString17 = rEString11.makeDot();
        st1920.automaton.REString rEString18 = rEString11.makeString();
        st1920.automaton.REString rEString19 = rEString7.makeSquareBrackets(rEString18);
        st1920.automaton.REString rEString20 = rEString7.makeString();
        st1920.automaton.REString rEString21 = rEString3.makeSquareBracketsTilde(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
    }

    @Test
    public void test429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test429");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString32 = rEString31.makeBeta();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = st1920.automaton.MatchString.matches("1", rEString32);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
    }

    @Test
    public void test430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test430");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeHash();
        st1920.automaton.REString rEString29 = rEString28.makeAt();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = rEString44.makeQuestionMark(rEString46);
        st1920.automaton.REString rEString61 = rEString60.makeBeta();
        st1920.automaton.REString rEString62 = rEString29.makeAddAlpha(rEString60);
        st1920.automaton.REString rEString63 = rEString62.makeString();
        java.lang.Class<?> wildcardClass64 = rEString63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test431");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString22 = rEString4.makeBraces(rEString20, (-1));
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString40 = rEString27.makeRange(rEString32, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString50 = rEString24.makeAnd(rEString40, rEString49);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString65 = rEString52.makeRange(rEString57, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = rEString24.makeTilde(rEString52);
        st1920.automaton.REString rEString67 = rEString66.makeDot();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString82 = rEString75.makeOr(rEString77, rEString80);
        st1920.automaton.REString rEString85 = rEString72.makeRange(rEString77, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString86 = rEString69.makeAddOne(rEString72);
        st1920.automaton.REString rEString87 = rEString66.makeAddBeta(rEString86);
        st1920.automaton.REString rEString88 = rEString66.makeHash();
        st1920.automaton.REString rEString89 = rEString22.makeQuestionMark(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test432");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString29.makeOne();
        st1920.automaton.REString rEString73 = rEString29.makeAt();
        st1920.automaton.REString rEString74 = rEString27.makeTilde(rEString29);
        st1920.automaton.REString rEString75 = rEString74.makeAt();
        st1920.automaton.REString rEString76 = rEString75.makeBeta();
        st1920.automaton.REString rEString77 = rEString76.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test433");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        st1920.automaton.REString rEString57 = rEString44.makeAlpha();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString69 = rEString59.makeSquareBracketsTilde(rEString63);
        st1920.automaton.REString rEString70 = rEString69.makeHash();
        st1920.automaton.REString rEString71 = rEString69.makeOne();
        st1920.automaton.REString rEString72 = rEString44.makeAddBeta(rEString69);
        st1920.automaton.REString rEString73 = rEString72.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test434");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        rEString2.string = "hi!b";
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString35 = rEString22.makeRange(rEString27, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = rEString20.makeQuestionMark(rEString22);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString22.makeBraces(rEString38, 1);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString53 = rEString52.makeAt();
        st1920.automaton.REString rEString54 = rEString38.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString52.makeString();
        st1920.automaton.REString rEString56 = rEString2.makeAddBeta(rEString52);
        rEString2.string = "#";
        st1920.automaton.REString rEString59 = rEString2.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
    }

    @Test
    public void test435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test435");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString35 = rEString16.makeDot();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString50 = rEString37.makeRange(rEString42, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString62 = rEString52.makeSquareBracketsTilde(rEString56);
        st1920.automaton.REString rEString63 = rEString42.makeAsterisk(rEString52);
        st1920.automaton.REString rEString64 = rEString52.makeBeta();
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString64.makeDot();
        st1920.automaton.REString rEString67 = rEString64.makeHash();
        st1920.automaton.REString rEString68 = rEString16.makeTilde(rEString64);
        rEString16.string = "hi!<1--1>";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
    }

    @Test
    public void test436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test436");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        java.lang.String str27 = rEString24.string;
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString44.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString55 = rEString34.makeAsterisk(rEString44);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString61 = rEString55.makeBracesTwoInts(rEString58, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString89 = rEString63.makeAnd(rEString79, rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        st1920.automaton.REString rEString91 = rEString61.makeAddOne(rEString90);
        st1920.automaton.REString rEString92 = rEString91.makeString();
        st1920.automaton.REString rEString94 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString95 = rEString91.makeTilde(rEString94);
        st1920.automaton.REString rEString96 = rEString95.makeAt();
        st1920.automaton.REString rEString97 = rEString95.makeAt();
        st1920.automaton.REString rEString98 = rEString24.makeSquareBracketsTilde(rEString97);
        st1920.automaton.REString rEString99 = rEString98.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "hi!" + "'", str27.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test437");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString32 = rEString19.makeRange(rEString24, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString33 = rEString17.makeQuestionMark(rEString19);
        st1920.automaton.REString rEString34 = rEString19.makeDot();
        st1920.automaton.REString rEString36 = rEString1.makeBracesComma(rEString34, (int) (short) -1);
        st1920.automaton.REString rEString37 = rEString1.makeAlpha();
        java.lang.String str38 = rEString1.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
    }

    @Test
    public void test438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test438");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString83 = rEString72.makeBraces(rEString79, (int) '4');
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString83.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString88 = rEString58.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString89 = rEString25.makeQuestionMark(rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        java.lang.String str91 = rEString88.string;
        st1920.automaton.REString rEString92 = rEString88.makeAt();
        st1920.automaton.REString rEString93 = rEString88.makeString();
        st1920.automaton.REString rEString94 = rEString1.makeAsterisk(rEString88);
        st1920.automaton.REString rEString95 = rEString1.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^hi!]" + "'", str91.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test439");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("[^hi!]?");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString18.makeSquareBracketsTilde(rEString22);
        st1920.automaton.REString rEString29 = rEString8.makeAsterisk(rEString18);
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString35 = rEString29.makeBracesTwoInts(rEString32, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString36 = rEString1.makeAsterisk(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
    }

    @Test
    public void test440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test440");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString3 = rEString2.makeAt();
        st1920.automaton.REString rEString4 = rEString3.makeAt();
        st1920.automaton.REString rEString5 = rEString3.makeBeta();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        java.lang.String str9 = rEString8.string;
        rEString8.string = "hi!b";
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString42 = rEString26.makeQuestionMark(rEString28);
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString46 = rEString28.makeBraces(rEString44, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString58 = rEString48.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString59 = rEString58.makeAt();
        st1920.automaton.REString rEString60 = rEString44.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString61 = rEString58.makeString();
        st1920.automaton.REString rEString62 = rEString8.makeAddBeta(rEString58);
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString65 = rEString64.makeHash();
        st1920.automaton.REString rEString66 = rEString62.makeAsterisk(rEString65);
        st1920.automaton.REString rEString67 = rEString5.makeTilde(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "\"string\"" + "'", str9.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
    }

    @Test
    public void test441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test441");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeAsterisk(rEString72);
        st1920.automaton.REString rEString74 = rEString44.makeAddBeta(rEString57);
        java.lang.String str75 = rEString57.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str75 + "' != '" + "#" + "'", str75.equals("#"));
    }

    @Test
    public void test442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test442");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString26.makeOr(rEString28, rEString31);
        st1920.automaton.REString rEString36 = rEString23.makeRange(rEString28, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString20.makeAnd(rEString36, rEString45);
        java.lang.String str47 = rEString46.string;
        st1920.automaton.REString rEString48 = rEString4.makeAsterisk(rEString46);
        st1920.automaton.REString rEString49 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString51 = rEString4.makeBracesComma(rEString49, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "hi!<-1-100>&hi!|hi!" + "'", str47.equals("hi!<-1-100>&hi!|hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test443");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString1.makeDot();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString30.makeAnd(rEString46, rEString55);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString74 = rEString61.makeRange(rEString66, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString75 = rEString58.makeAddOne(rEString61);
        st1920.automaton.REString rEString76 = rEString46.makeAddBeta(rEString61);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString79.makeAt();
        st1920.automaton.REString rEString81 = rEString80.makeAt();
        st1920.automaton.REString rEString82 = rEString80.makeBeta();
        st1920.automaton.REString rEString83 = rEString46.makePlus(rEString82);
        st1920.automaton.REString rEString84 = rEString46.makeAlpha();
        st1920.automaton.REString rEString85 = rEString84.makeAlpha();
        st1920.automaton.REString rEString86 = rEString28.makePlus(rEString84);
        st1920.automaton.REString rEString88 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString91 = rEString90.makeString();
        st1920.automaton.REString rEString93 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString94 = rEString93.makeString();
        st1920.automaton.REString rEString95 = rEString88.makeOr(rEString90, rEString93);
        st1920.automaton.REString rEString96 = rEString90.makeDot();
        st1920.automaton.REString rEString97 = rEString90.makeAt();
        st1920.automaton.REString rEString98 = rEString84.makeAsterisk(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test444");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString49 = rEString36.makeRange(rEString41, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString33.makeAnd(rEString49, rEString58);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString77 = rEString64.makeRange(rEString69, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = rEString61.makeAddOne(rEString64);
        st1920.automaton.REString rEString79 = rEString33.makeAddAlpha(rEString78);
        java.lang.String str80 = rEString33.string;
        st1920.automaton.REString rEString82 = rEString17.makeBraces(rEString33, (int) '#');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean83 = st1920.automaton.MatchString.matches("", rEString82);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str80 + "' != '" + "hi!" + "'", str80.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
    }

    @Test
    public void test445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test445");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString29.makeOne();
        st1920.automaton.REString rEString73 = rEString29.makeAt();
        st1920.automaton.REString rEString74 = rEString27.makeTilde(rEString29);
        st1920.automaton.REString rEString75 = rEString27.makeHash();
        st1920.automaton.REString rEString76 = rEString75.makeDot();
        st1920.automaton.REString rEString77 = rEString76.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test446");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeAlpha();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString56 = rEString46.makeSquareBracketsTilde(rEString50);
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString69 = rEString62.makeOr(rEString64, rEString67);
        st1920.automaton.REString rEString72 = rEString59.makeRange(rEString64, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString73 = rEString57.makeAsterisk(rEString72);
        st1920.automaton.REString rEString74 = rEString44.makeAddBeta(rEString57);
        st1920.automaton.REString rEString75 = rEString57.makeAt();
        st1920.automaton.REString rEString76 = rEString57.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
    }

    @Test
    public void test447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test447");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString31 = rEString14.makeHash();
        java.lang.String str32 = rEString14.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "hi!<-1-100>" + "'", str32.equals("hi!<-1-100>"));
    }

    @Test
    public void test448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test448");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString15 = rEString1.makeDot();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString33 = rEString26.makeOr(rEString28, rEString31);
        st1920.automaton.REString rEString34 = rEString28.makeDot();
        st1920.automaton.REString rEString35 = rEString28.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString50 = rEString37.makeRange(rEString42, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString62 = rEString52.makeSquareBracketsTilde(rEString56);
        st1920.automaton.REString rEString63 = rEString42.makeAsterisk(rEString52);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString69 = rEString63.makeBracesTwoInts(rEString66, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString71 = rEString28.makeBracesComma(rEString66, 1);
        st1920.automaton.REString rEString72 = rEString24.makeAddAlpha(rEString66);
        st1920.automaton.REString rEString73 = rEString24.makeHash();
        st1920.automaton.REString rEString74 = rEString1.makeAddOne(rEString24);
        java.lang.Class<?> wildcardClass75 = rEString24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test449");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString72 = rEString51.makeAsterisk(rEString61);
        st1920.automaton.REString rEString73 = rEString44.makeSquareBrackets(rEString51);
        st1920.automaton.REString rEString74 = rEString51.makeBeta();
        st1920.automaton.REString rEString75 = rEString51.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test450");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString14 = rEString4.makeSquareBracketsTilde(rEString8);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString25 = rEString14.makeBraces(rEString21, (int) '4');
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString25.makeSquareBracketsTilde(rEString27);
        java.lang.String str30 = rEString27.string;
        st1920.automaton.REString rEString33 = rEString2.makeRange(rEString27, (-1), (int) (byte) 1);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString48 = rEString41.makeOr(rEString43, rEString46);
        st1920.automaton.REString rEString51 = rEString38.makeRange(rEString43, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString61 = rEString35.makeAnd(rEString51, rEString60);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString76 = rEString69.makeOr(rEString71, rEString74);
        st1920.automaton.REString rEString79 = rEString66.makeRange(rEString71, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString80 = rEString63.makeAddOne(rEString66);
        st1920.automaton.REString rEString81 = rEString35.makeAddAlpha(rEString80);
        st1920.automaton.REString rEString82 = rEString33.makeSquareBrackets(rEString80);
        st1920.automaton.REString rEString83 = rEString80.makeString();
        st1920.automaton.REString rEString84 = rEString80.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "hi!" + "'", str30.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
    }

    @Test
    public void test451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test451");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString12 = rEString3.makeBeta();
        st1920.automaton.REString rEString13 = rEString12.makeAlpha();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString28 = rEString15.makeRange(rEString20, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString28.makeQuestionMark(rEString30);
        st1920.automaton.REString rEString45 = rEString44.makeOne();
        st1920.automaton.REString rEString48 = rEString13.makeRange(rEString44, (int) '#', (int) (short) -1);
        st1920.automaton.REString rEString49 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString50 = rEString13.makeAddOne(rEString49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
    }

    @Test
    public void test452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test452");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString45 = rEString1.makeAt();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString57 = rEString50.makeOr(rEString52, rEString55);
        st1920.automaton.REString rEString60 = rEString47.makeRange(rEString52, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString73 = rEString72.makeHash();
        st1920.automaton.REString rEString76 = rEString47.makeRange(rEString73, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString77 = rEString1.makeTilde(rEString73);
        rEString73.string = "hi!<-1-100>b";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test453");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString1.makeDot();
        rEString1.string = "";
        st1920.automaton.REString rEString31 = rEString1.makeDot();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString41 = rEString35.makeDot();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString68.makeDot();
        st1920.automaton.REString rEString70 = rEString41.makeAddOne(rEString68);
        st1920.automaton.REString rEString71 = rEString68.makeDot();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("[^hi!]?");
        st1920.automaton.REString rEString74 = rEString71.makeSquareBracketsTilde(rEString73);
        st1920.automaton.REString rEString75 = rEString1.makeAddAlpha(rEString73);
        java.lang.Class<?> wildcardClass76 = rEString75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test454");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString43.makeDot();
        st1920.automaton.REString rEString45 = rEString44.makeHash();
        st1920.automaton.REString rEString46 = rEString44.makeBeta();
        java.lang.Class<?> wildcardClass47 = rEString46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test455");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString80.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test456");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString17.makeSquareBracketsTilde(rEString21);
        st1920.automaton.REString rEString28 = rEString7.makeAsterisk(rEString17);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString34 = rEString28.makeBracesTwoInts(rEString31, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString52 = rEString39.makeRange(rEString44, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString62 = rEString36.makeAnd(rEString52, rEString61);
        st1920.automaton.REString rEString63 = rEString61.makeOne();
        st1920.automaton.REString rEString64 = rEString34.makeAddOne(rEString63);
        java.lang.String str65 = rEString34.string;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = st1920.automaton.MatchString.matches("hi!|hi!", rEString34);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "\"string\"{-1,32}" + "'", str65.equals("\"string\"{-1,32}"));
    }

    @Test
    public void test457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test457");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString29.makeAddOne(rEString32);
        st1920.automaton.REString rEString47 = rEString1.makeAddAlpha(rEString46);
        java.lang.String str48 = rEString1.string;
        st1920.automaton.REString rEString49 = rEString1.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "hi!" + "'", str48.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
    }

    @Test
    public void test458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test458");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeOne();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString40 = rEString27.makeRange(rEString32, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString53 = rEString32.makeAsterisk(rEString42);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString59 = rEString53.makeBracesTwoInts(rEString56, (int) (byte) -1, (int) ' ');
        java.lang.String str60 = rEString59.string;
        st1920.automaton.REString rEString61 = rEString25.makeSquareBrackets(rEString59);
        st1920.automaton.REString rEString62 = rEString25.makeBeta();
        st1920.automaton.REString rEString63 = rEString62.makeAlpha();
        st1920.automaton.REString rEString65 = rEString10.makeBraces(rEString63, 1);
        java.lang.Class<?> wildcardClass66 = rEString63.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "\"string\"{-1,32}" + "'", str60.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test459");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString34 = rEString27.makeOr(rEString29, rEString32);
        st1920.automaton.REString rEString35 = rEString25.makeSquareBracketsTilde(rEString29);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString46 = rEString35.makeBraces(rEString42, (int) '4');
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString46.makeSquareBracketsTilde(rEString48);
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString68 = rEString55.makeRange(rEString60, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString77 = rEString70.makeOr(rEString72, rEString75);
        st1920.automaton.REString rEString78 = rEString52.makeAnd(rEString68, rEString77);
        st1920.automaton.REString rEString80 = rEString48.makeBraces(rEString68, 0);
        st1920.automaton.REString rEString81 = rEString23.makeQuestionMark(rEString80);
        java.lang.String str82 = rEString23.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str82 + "' != '" + "\"string\"" + "'", str82.equals("\"string\""));
    }

    @Test
    public void test460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test460");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString27 = rEString6.makeAsterisk(rEString16);
        st1920.automaton.REString rEString28 = rEString16.makeBeta();
        st1920.automaton.REString rEString29 = rEString16.makeBeta();
        st1920.automaton.REString rEString30 = rEString16.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
    }

    @Test
    public void test461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test461");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        java.lang.String str18 = rEString17.string;
        rEString17.string = "hi!b";
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString35 = rEString22.makeRange(rEString27, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString50 = rEString37.makeRange(rEString42, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString51 = rEString35.makeQuestionMark(rEString37);
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString55 = rEString37.makeBraces(rEString53, 1);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString66 = rEString59.makeOr(rEString61, rEString64);
        st1920.automaton.REString rEString67 = rEString57.makeSquareBracketsTilde(rEString61);
        st1920.automaton.REString rEString68 = rEString67.makeAt();
        st1920.automaton.REString rEString69 = rEString53.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString70 = rEString67.makeString();
        st1920.automaton.REString rEString71 = rEString17.makeAddBeta(rEString67);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString74 = rEString73.makeHash();
        st1920.automaton.REString rEString75 = rEString71.makeAsterisk(rEString74);
        st1920.automaton.REString rEString76 = rEString71.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString88 = rEString81.makeOr(rEString83, rEString86);
        st1920.automaton.REString rEString89 = rEString83.makeDot();
        st1920.automaton.REString rEString90 = rEString83.makeString();
        st1920.automaton.REString rEString91 = rEString79.makeSquareBrackets(rEString90);
        st1920.automaton.REString rEString92 = rEString76.makeSquareBrackets(rEString90);
        st1920.automaton.REString rEString94 = rEString6.makeBracesComma(rEString92, (int) (short) 1);
        st1920.automaton.REString rEString95 = rEString92.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "\"string\"" + "'", str18.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test462");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString35 = rEString16.makeDot();
        st1920.automaton.REString rEString36 = rEString16.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
    }

    @Test
    public void test463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test463");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString6.makeDot();
        st1920.automaton.REString rEString13 = rEString6.makeString();
        st1920.automaton.REString rEString14 = rEString2.makeSquareBrackets(rEString13);
        st1920.automaton.REString rEString15 = rEString2.makeString();
        st1920.automaton.REString rEString16 = rEString15.makeBeta();
        java.lang.Class<?> wildcardClass17 = rEString15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test464");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("\"string\"?");
        st1920.automaton.REString rEString2 = rEString1.makeDot();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString29 = rEString22.makeOr(rEString24, rEString27);
        st1920.automaton.REString rEString30 = rEString4.makeAnd(rEString20, rEString29);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = rEString4.makeTilde(rEString32);
        st1920.automaton.REString rEString49 = rEString2.makeRange(rEString46, (int) (short) 1, (int) (byte) -1);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString67 = rEString54.makeRange(rEString59, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString84 = rEString69.makeDot();
        st1920.automaton.REString rEString86 = rEString51.makeBracesComma(rEString84, (int) (short) -1);
        st1920.automaton.REString rEString87 = rEString84.makeHash();
        st1920.automaton.REString rEString88 = rEString2.makeTilde(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
    }

    @Test
    public void test465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test465");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString6.makeBeta();
        st1920.automaton.REString rEString10 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString11 = rEString6.makeQuestionMark(rEString10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
    }

    @Test
    public void test466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test466");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString36.makeOr(rEString38, rEString41);
        st1920.automaton.REString rEString46 = rEString33.makeRange(rEString38, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = rEString30.makeAddOne(rEString33);
        st1920.automaton.REString rEString48 = rEString2.makeAddAlpha(rEString47);
        java.lang.String str49 = rEString2.string;
        rEString2.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString52 = rEString2.makeOne();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = st1920.automaton.MatchString.matches("hi!<-1-100>*", rEString52);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str49 + "' != '" + "hi!" + "'", str49.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
    }

    @Test
    public void test467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test467");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = rEString1.makeAddOne(rEString4);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString44 = rEString37.makeOr(rEString39, rEString42);
        st1920.automaton.REString rEString45 = rEString35.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString56 = rEString45.makeBraces(rEString52, (int) '4');
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString56.makeSquareBracketsTilde(rEString58);
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString71 = rEString64.makeOr(rEString66, rEString69);
        st1920.automaton.REString rEString72 = rEString62.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString83 = rEString72.makeBraces(rEString79, (int) '4');
        st1920.automaton.REString rEString85 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = rEString85.makeString();
        st1920.automaton.REString rEString87 = rEString83.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString88 = rEString58.makeSquareBracketsTilde(rEString85);
        st1920.automaton.REString rEString89 = rEString25.makeQuestionMark(rEString88);
        st1920.automaton.REString rEString90 = rEString88.makeOne();
        java.lang.String str91 = rEString88.string;
        st1920.automaton.REString rEString92 = rEString88.makeAt();
        st1920.automaton.REString rEString93 = rEString88.makeString();
        st1920.automaton.REString rEString94 = rEString1.makeAsterisk(rEString88);
        st1920.automaton.REString rEString95 = null;
        // The following exception was thrown during execution in test generation
        try {
            st1920.automaton.REString rEString96 = rEString88.makeQuestionMark(rEString95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "[^hi!]" + "'", str91.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test468");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString13 = rEString3.makeSquareBracketsTilde(rEString7);
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString24 = rEString13.makeBraces(rEString20, (int) '4');
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString28 = rEString24.makeSquareBracketsTilde(rEString26);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString40 = rEString30.makeSquareBracketsTilde(rEString34);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString49 = rEString42.makeOr(rEString44, rEString47);
        st1920.automaton.REString rEString51 = rEString40.makeBraces(rEString47, (int) '4');
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString51.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString56 = rEString26.makeSquareBracketsTilde(rEString53);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString68 = rEString58.makeSquareBracketsTilde(rEString62);
        st1920.automaton.REString rEString69 = rEString68.makeHash();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString81 = rEString74.makeOr(rEString76, rEString79);
        st1920.automaton.REString rEString84 = rEString71.makeRange(rEString76, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString85 = rEString69.makeAsterisk(rEString84);
        st1920.automaton.REString rEString86 = rEString56.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString87 = rEString56.makeString();
        st1920.automaton.REString rEString88 = rEString56.makeAt();
        st1920.automaton.REString rEString90 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString91 = rEString56.makePlus(rEString90);
        st1920.automaton.REString rEString94 = rEString1.makeRange(rEString91, (int) (byte) -1, 10);
        rEString91.string = "\"string\"";
        st1920.automaton.REString rEString97 = rEString91.makeString();
        st1920.automaton.REString rEString98 = rEString97.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }

    @Test
    public void test469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test469");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString65 = rEString58.makeOr(rEString60, rEString63);
        st1920.automaton.REString rEString66 = rEString56.makeSquareBracketsTilde(rEString60);
        st1920.automaton.REString rEString67 = rEString66.makeHash();
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = rEString74.makeString();
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString78 = rEString77.makeString();
        st1920.automaton.REString rEString79 = rEString72.makeOr(rEString74, rEString77);
        st1920.automaton.REString rEString82 = rEString69.makeRange(rEString74, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString83 = rEString67.makeAsterisk(rEString82);
        st1920.automaton.REString rEString84 = rEString54.makeSquareBracketsTilde(rEString67);
        st1920.automaton.REString rEString85 = rEString54.makeString();
        st1920.automaton.REString rEString86 = rEString85.makeAt();
        st1920.automaton.REString rEString87 = rEString85.makeString();
        rEString87.string = "hi!{100}";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test470");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString27 = rEString26.makeDot();
        java.lang.String str28 = rEString26.string;
        rEString26.string = "hi!<1--1>";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "[^hi!]" + "'", str28.equals("[^hi!]"));
    }

    @Test
    public void test471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test471");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("[^hi!]?");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString11 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = rEString11.makeString();
        st1920.automaton.REString rEString13 = rEString6.makeOr(rEString8, rEString11);
        st1920.automaton.REString rEString16 = rEString3.makeRange(rEString8, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString18.makeSquareBracketsTilde(rEString22);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString39 = rEString28.makeBraces(rEString35, (int) '4');
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString43 = rEString39.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString66 = rEString55.makeBraces(rEString62, (int) '4');
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString66.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString71 = rEString41.makeSquareBracketsTilde(rEString68);
        st1920.automaton.REString rEString72 = rEString8.makeQuestionMark(rEString71);
        st1920.automaton.REString rEString73 = rEString71.makeOne();
        st1920.automaton.REString rEString74 = rEString73.makeAt();
        st1920.automaton.REString rEString75 = rEString73.makeDot();
        st1920.automaton.REString rEString78 = rEString1.makeBracesTwoInts(rEString75, (int) (byte) 1, (int) (short) 1);
        java.lang.String str79 = rEString1.string;
        st1920.automaton.REString rEString81 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString82 = rEString81.makeString();
        st1920.automaton.REString rEString83 = rEString82.makeAt();
        st1920.automaton.REString rEString84 = rEString1.makeSquareBracketsTilde(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "[^hi!]?" + "'", str79.equals("[^hi!]?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
    }

    @Test
    public void test472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test472");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString45.makeSquareBracketsTilde(rEString49);
        st1920.automaton.REString rEString56 = rEString55.makeHash();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString61.makeOr(rEString63, rEString66);
        st1920.automaton.REString rEString71 = rEString58.makeRange(rEString63, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString72 = rEString56.makeAsterisk(rEString71);
        st1920.automaton.REString rEString73 = rEString72.makeBeta();
        st1920.automaton.REString rEString74 = rEString72.makeString();
        st1920.automaton.REString rEString75 = rEString43.makePlus(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test473");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString15 = rEString8.makeOr(rEString10, rEString13);
        st1920.automaton.REString rEString18 = rEString5.makeRange(rEString10, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString28 = rEString2.makeAnd(rEString18, rEString27);
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = rEString38.makeString();
        st1920.automaton.REString rEString40 = rEString33.makeOr(rEString35, rEString38);
        st1920.automaton.REString rEString43 = rEString30.makeRange(rEString35, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString44 = rEString2.makeTilde(rEString30);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = st1920.automaton.MatchString.matches("\"string\"{1,}{35,}", rEString44);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
    }

    @Test
    public void test474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test474");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString72 = rEString51.makeAsterisk(rEString61);
        st1920.automaton.REString rEString73 = rEString44.makeSquareBrackets(rEString51);
        java.lang.String str74 = rEString51.string;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str74 + "' != '" + "hi!" + "'", str74.equals("hi!"));
    }

    @Test
    public void test475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test475");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString23 = rEString22.makeBeta();
        st1920.automaton.REString rEString24 = rEString23.makeDot();
        st1920.automaton.REString rEString26 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = rEString26.makeString();
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString39 = rEString26.makeRange(rEString31, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString50 = rEString43.makeOr(rEString45, rEString48);
        st1920.automaton.REString rEString51 = rEString41.makeSquareBracketsTilde(rEString45);
        st1920.automaton.REString rEString52 = rEString51.makeHash();
        st1920.automaton.REString rEString55 = rEString26.makeRange(rEString52, (int) (byte) 10, (int) 'a');
        st1920.automaton.REString rEString56 = rEString26.makeAlpha();
        st1920.automaton.REString rEString57 = rEString23.makeSquareBracketsTilde(rEString56);
        java.lang.Class<?> wildcardClass58 = rEString23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test476");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString85 = rEString81.makeAt();
        st1920.automaton.REString rEString86 = rEString3.makeAddBeta(rEString85);
        st1920.automaton.REString rEString87 = rEString3.makeOne();
        st1920.automaton.REString rEString88 = rEString87.makeBeta();
        st1920.automaton.REString rEString89 = rEString87.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test477");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        rEString56.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString61.makeAt();
        st1920.automaton.REString rEString63 = rEString56.makeQuestionMark(rEString61);
        st1920.automaton.REString rEString64 = rEString63.makeDot();
        st1920.automaton.REString rEString65 = rEString63.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test478");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString44 = rEString1.makeOne();
        st1920.automaton.REString rEString45 = rEString1.makeDot();
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = rEString67.makeString();
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString72 = rEString65.makeOr(rEString67, rEString70);
        st1920.automaton.REString rEString73 = rEString47.makeAnd(rEString63, rEString72);
        st1920.automaton.REString rEString74 = rEString72.makeOne();
        st1920.automaton.REString rEString75 = rEString1.makeAddAlpha(rEString72);
        rEString1.string = "~hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test479");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString24 = rEString23.makeString();
        st1920.automaton.REString rEString25 = rEString18.makeOr(rEString20, rEString23);
        st1920.automaton.REString rEString26 = rEString16.makeSquareBracketsTilde(rEString20);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString35 = rEString28.makeOr(rEString30, rEString33);
        st1920.automaton.REString rEString37 = rEString26.makeBraces(rEString33, (int) '4');
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString37.makeSquareBracketsTilde(rEString39);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString55.makeOr(rEString57, rEString60);
        st1920.automaton.REString rEString64 = rEString53.makeBraces(rEString60, (int) '4');
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = rEString66.makeString();
        st1920.automaton.REString rEString68 = rEString64.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString69 = rEString39.makeSquareBracketsTilde(rEString66);
        st1920.automaton.REString rEString70 = rEString6.makeQuestionMark(rEString69);
        st1920.automaton.REString rEString71 = rEString6.makeOne();
        st1920.automaton.REString rEString72 = rEString71.makeBeta();
        st1920.automaton.REString rEString73 = rEString72.makeAlpha();
        st1920.automaton.REString rEString74 = rEString73.makeDot();
        st1920.automaton.REString rEString75 = rEString73.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
    }

    @Test
    public void test480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test480");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString12 = rEString11.makeHash();
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = rEString14.makeString();
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString24 = rEString17.makeOr(rEString19, rEString22);
        st1920.automaton.REString rEString27 = rEString14.makeRange(rEString19, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = rEString12.makeAsterisk(rEString27);
        st1920.automaton.REString rEString29 = rEString28.makeOne();
        st1920.automaton.REString rEString30 = rEString29.makeHash();
        java.lang.String str31 = rEString30.string;
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString49 = rEString36.makeRange(rEString41, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString59 = rEString33.makeAnd(rEString49, rEString58);
        st1920.automaton.REString rEString60 = rEString33.makeDot();
        st1920.automaton.REString rEString61 = rEString33.makeDot();
        st1920.automaton.REString rEString62 = rEString61.makeDot();
        st1920.automaton.REString rEString65 = rEString30.makeRange(rEString61, (int) (short) 1, (int) (short) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str31 + "' != '" + "#" + "'", str31.equals("#"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
    }

    @Test
    public void test481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test481");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        java.lang.String str28 = rEString27.string;
        st1920.automaton.REString rEString29 = rEString27.makeAt();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "hi!<-1-100>&hi!|hi!" + "'", str28.equals("hi!<-1-100>&hi!|hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
    }

    @Test
    public void test482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test482");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString54 = rEString24.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = rEString24.makeAt();
        st1920.automaton.REString rEString56 = rEString24.makeHash();
        st1920.automaton.REString rEString57 = rEString56.makeHash();
        st1920.automaton.REString rEString58 = rEString56.makeString();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
    }

    @Test
    public void test483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test483");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = rEString5.makeString();
        st1920.automaton.REString rEString8 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = rEString8.makeString();
        st1920.automaton.REString rEString10 = rEString3.makeOr(rEString5, rEString8);
        st1920.automaton.REString rEString11 = rEString1.makeSquareBracketsTilde(rEString5);
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString20 = rEString13.makeOr(rEString15, rEString18);
        st1920.automaton.REString rEString22 = rEString11.makeBraces(rEString18, (int) '4');
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString22.makeSquareBracketsTilde(rEString24);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString46.makeOr(rEString48, rEString51);
        st1920.automaton.REString rEString54 = rEString28.makeAnd(rEString44, rEString53);
        st1920.automaton.REString rEString56 = rEString24.makeBraces(rEString44, 0);
        rEString56.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString62 = rEString61.makeAt();
        st1920.automaton.REString rEString63 = rEString56.makeQuestionMark(rEString61);
        java.lang.String str64 = rEString63.string;
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString76 = rEString66.makeSquareBracketsTilde(rEString70);
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString81 = rEString80.makeString();
        st1920.automaton.REString rEString83 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = rEString83.makeString();
        st1920.automaton.REString rEString85 = rEString78.makeOr(rEString80, rEString83);
        st1920.automaton.REString rEString87 = rEString76.makeBraces(rEString83, (int) '4');
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString87.makeSquareBracketsTilde(rEString89);
        st1920.automaton.REString rEString92 = rEString91.makeDot();
        st1920.automaton.REString rEString93 = rEString63.makeAsterisk(rEString91);
        st1920.automaton.REString rEString94 = rEString93.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "\"string\"?" + "'", str64.equals("\"string\"?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test484");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!<-1-100>*");
    }

    @Test
    public void test485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test485");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = rEString55.makeString();
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = rEString58.makeString();
        st1920.automaton.REString rEString60 = rEString53.makeOr(rEString55, rEString58);
        st1920.automaton.REString rEString63 = rEString50.makeRange(rEString55, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString74 = rEString73.makeString();
        st1920.automaton.REString rEString75 = rEString68.makeOr(rEString70, rEString73);
        st1920.automaton.REString rEString78 = rEString65.makeRange(rEString70, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString79 = rEString63.makeQuestionMark(rEString65);
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString81 = rEString46.makeAt();
        st1920.automaton.REString rEString82 = rEString81.makeAt();
        st1920.automaton.REString rEString83 = rEString82.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test486");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        java.lang.String str15 = rEString14.string;
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString23 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString30 = rEString23.makeOr(rEString25, rEString28);
        st1920.automaton.REString rEString33 = rEString20.makeRange(rEString25, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString43 = rEString17.makeAnd(rEString33, rEString42);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString59 = rEString17.makeTilde(rEString45);
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString61.makeSquareBracketsTilde(rEString65);
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString82 = rEString71.makeBraces(rEString78, (int) '4');
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString86 = rEString82.makeSquareBracketsTilde(rEString84);
        st1920.automaton.REString rEString88 = rEString45.makeBraces(rEString86, (int) '#');
        st1920.automaton.REString rEString89 = rEString45.makeDot();
        st1920.automaton.REString rEString90 = rEString14.makeQuestionMark(rEString45);
        st1920.automaton.REString rEString91 = rEString14.makeAlpha();
        st1920.automaton.REString rEString92 = rEString11.makeAddOne(rEString91);
        st1920.automaton.REString rEString93 = rEString92.makeOne();
        st1920.automaton.REString rEString94 = rEString92.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "\"string\"" + "'", str15.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
    }

    @Test
    public void test487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test487");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString61 = rEString60.makeString();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString73 = rEString60.makeRange(rEString65, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString74 = rEString57.makeAddOne(rEString60);
        st1920.automaton.REString rEString75 = rEString29.makeAddAlpha(rEString74);
        java.lang.String str76 = rEString29.string;
        st1920.automaton.REString rEString79 = rEString17.makeRange(rEString29, (int) (byte) 1, (int) (short) -1);
        st1920.automaton.REString rEString80 = rEString79.makeOne();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeQuestionMark(rEString92);
        st1920.automaton.REString rEString95 = rEString92.makeOne();
        st1920.automaton.REString rEString96 = rEString92.makeBeta();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str76 + "' != '" + "hi!" + "'", str76.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
    }

    @Test
    public void test488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test488");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString39 = rEString29.makeSquareBracketsTilde(rEString33);
        st1920.automaton.REString rEString40 = rEString39.makeHash();
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString55 = rEString48.makeOr(rEString50, rEString53);
        st1920.automaton.REString rEString58 = rEString45.makeRange(rEString50, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString68 = rEString42.makeAnd(rEString58, rEString67);
        st1920.automaton.REString rEString70 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString71 = rEString70.makeString();
        st1920.automaton.REString rEString73 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString75 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString76 = rEString75.makeString();
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString73.makeOr(rEString75, rEString78);
        st1920.automaton.REString rEString83 = rEString70.makeRange(rEString75, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString84 = rEString42.makeTilde(rEString70);
        st1920.automaton.REString rEString85 = rEString26.makeConcatenation(rEString39, rEString42);
        st1920.automaton.REString rEString86 = rEString39.makeAt();
        st1920.automaton.REString rEString87 = rEString86.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
    }

    @Test
    public void test489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test489");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString60 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString67 = rEString60.makeOr(rEString62, rEString65);
        st1920.automaton.REString rEString70 = rEString57.makeRange(rEString62, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString71 = rEString29.makeTilde(rEString57);
        st1920.automaton.REString rEString72 = rEString71.makeDot();
        st1920.automaton.REString rEString73 = rEString27.makeAddBeta(rEString71);
        rEString73.string = "hi!";
        st1920.automaton.REString rEString76 = rEString73.makeAt();
        st1920.automaton.REString rEString77 = rEString73.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
    }

    @Test
    public void test490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test490");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeHash();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = rEString28.makeString();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = rEString33.makeString();
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString38 = rEString31.makeOr(rEString33, rEString36);
        st1920.automaton.REString rEString41 = rEString28.makeRange(rEString33, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString48 = rEString47.makeString();
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = rEString50.makeString();
        st1920.automaton.REString rEString52 = rEString45.makeOr(rEString47, rEString50);
        st1920.automaton.REString rEString53 = rEString43.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString54 = rEString33.makeAsterisk(rEString43);
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString60 = rEString54.makeBracesTwoInts(rEString57, (int) (byte) -1, (int) ' ');
        java.lang.String str61 = rEString60.string;
        st1920.automaton.REString rEString62 = rEString26.makeSquareBrackets(rEString60);
        st1920.automaton.REString rEString63 = rEString26.makeBeta();
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString75 = rEString65.makeSquareBracketsTilde(rEString69);
        st1920.automaton.REString rEString77 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString83 = rEString82.makeString();
        st1920.automaton.REString rEString84 = rEString77.makeOr(rEString79, rEString82);
        st1920.automaton.REString rEString86 = rEString75.makeBraces(rEString82, (int) '4');
        st1920.automaton.REString rEString87 = rEString86.makeBeta();
        st1920.automaton.REString rEString88 = rEString3.makeOr(rEString63, rEString86);
        st1920.automaton.REString rEString89 = rEString63.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "\"string\"{-1,32}" + "'", str61.equals("\"string\"{-1,32}"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
    }

    @Test
    public void test491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test491");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString39 = rEString32.makeOr(rEString34, rEString37);
        st1920.automaton.REString rEString42 = rEString29.makeRange(rEString34, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString43 = rEString1.makeTilde(rEString29);
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = rEString53.makeString();
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString58 = rEString51.makeOr(rEString53, rEString56);
        st1920.automaton.REString rEString61 = rEString48.makeRange(rEString53, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString66 = rEString65.makeString();
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString70 = rEString63.makeOr(rEString65, rEString68);
        st1920.automaton.REString rEString71 = rEString45.makeAnd(rEString61, rEString70);
        st1920.automaton.REString rEString72 = rEString1.makeAddAlpha(rEString71);
        st1920.automaton.REString rEString73 = rEString72.makeDot();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
    }

    @Test
    public void test492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test492");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString86 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString87 = rEString86.makeString();
        st1920.automaton.REString rEString89 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString90 = rEString89.makeString();
        st1920.automaton.REString rEString91 = rEString84.makeOr(rEString86, rEString89);
        st1920.automaton.REString rEString92 = rEString82.makeSquareBracketsTilde(rEString86);
        st1920.automaton.REString rEString93 = rEString92.makeAt();
        st1920.automaton.REString rEString94 = rEString80.makeAddAlpha(rEString93);
        st1920.automaton.REString rEString95 = rEString93.makeOne();
        rEString93.string = "hi!<-1-100>*";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString95);
    }

    @Test
    public void test493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test493");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = rEString2.makeString();
        st1920.automaton.REString rEString5 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString11 = rEString10.makeString();
        st1920.automaton.REString rEString12 = rEString5.makeOr(rEString7, rEString10);
        st1920.automaton.REString rEString15 = rEString2.makeRange(rEString7, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString20.makeOr(rEString22, rEString25);
        st1920.automaton.REString rEString30 = rEString17.makeRange(rEString22, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString31 = rEString15.makeQuestionMark(rEString17);
        st1920.automaton.REString rEString33 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString35 = rEString17.makeBraces(rEString33, 1);
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = rEString41.makeString();
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString45 = rEString44.makeString();
        st1920.automaton.REString rEString46 = rEString39.makeOr(rEString41, rEString44);
        st1920.automaton.REString rEString47 = rEString37.makeSquareBracketsTilde(rEString41);
        st1920.automaton.REString rEString48 = rEString47.makeAt();
        st1920.automaton.REString rEString49 = rEString33.makeSquareBracketsTilde(rEString47);
        st1920.automaton.REString rEString50 = rEString47.makeString();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = st1920.automaton.MatchString.matches("#", rEString50);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
    }

    @Test
    public void test494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test494");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString92 = rEString79.makeRange(rEString84, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString93 = rEString76.makeAddOne(rEString79);
        st1920.automaton.REString rEString94 = rEString64.makeAddBeta(rEString79);
        java.lang.String str95 = rEString94.string;
        st1920.automaton.REString rEString96 = rEString3.makePlus(rEString94);
        st1920.automaton.REString rEString97 = rEString94.makeHash();
        st1920.automaton.REString rEString98 = rEString97.makeAlpha();
        st1920.automaton.REString rEString99 = rEString97.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "hi!b" + "'", str95.equals("hi!b"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString99);
    }

    @Test
    public void test495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test495");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString11 = rEString3.makeString();
        st1920.automaton.REString rEString13 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString14 = rEString13.makeString();
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString19 = rEString18.makeString();
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString23 = rEString16.makeOr(rEString18, rEString21);
        st1920.automaton.REString rEString26 = rEString13.makeRange(rEString18, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString28 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = rEString35.makeString();
        st1920.automaton.REString rEString37 = rEString30.makeOr(rEString32, rEString35);
        st1920.automaton.REString rEString38 = rEString28.makeSquareBracketsTilde(rEString32);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString43 = rEString42.makeString();
        st1920.automaton.REString rEString45 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = rEString45.makeString();
        st1920.automaton.REString rEString47 = rEString40.makeOr(rEString42, rEString45);
        st1920.automaton.REString rEString49 = rEString38.makeBraces(rEString45, (int) '4');
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString53 = rEString49.makeSquareBracketsTilde(rEString51);
        st1920.automaton.REString rEString55 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString62 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString63 = rEString62.makeString();
        st1920.automaton.REString rEString64 = rEString57.makeOr(rEString59, rEString62);
        st1920.automaton.REString rEString65 = rEString55.makeSquareBracketsTilde(rEString59);
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString76 = rEString65.makeBraces(rEString72, (int) '4');
        st1920.automaton.REString rEString78 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString79 = rEString78.makeString();
        st1920.automaton.REString rEString80 = rEString76.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString81 = rEString51.makeSquareBracketsTilde(rEString78);
        st1920.automaton.REString rEString82 = rEString18.makeQuestionMark(rEString81);
        st1920.automaton.REString rEString83 = rEString81.makeOne();
        java.lang.String str84 = rEString81.string;
        st1920.automaton.REString rEString85 = rEString81.makeAt();
        st1920.automaton.REString rEString86 = rEString3.makeAddBeta(rEString85);
        st1920.automaton.REString rEString87 = rEString3.makeOne();
        st1920.automaton.REString rEString88 = rEString87.makeAt();
        java.lang.Class<?> wildcardClass89 = rEString88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[^hi!]" + "'", str84.equals("[^hi!]"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test496");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        java.lang.String str3 = rEString2.string;
        rEString2.string = "hi!b";
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString8 = rEString7.makeString();
        st1920.automaton.REString rEString10 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = rEString15.makeString();
        st1920.automaton.REString rEString17 = rEString10.makeOr(rEString12, rEString15);
        st1920.automaton.REString rEString20 = rEString7.makeRange(rEString12, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString22 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString23 = rEString22.makeString();
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString28 = rEString27.makeString();
        st1920.automaton.REString rEString30 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = rEString30.makeString();
        st1920.automaton.REString rEString32 = rEString25.makeOr(rEString27, rEString30);
        st1920.automaton.REString rEString35 = rEString22.makeRange(rEString27, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString36 = rEString20.makeQuestionMark(rEString22);
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString40 = rEString22.makeBraces(rEString38, 1);
        st1920.automaton.REString rEString42 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString51 = rEString44.makeOr(rEString46, rEString49);
        st1920.automaton.REString rEString52 = rEString42.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString53 = rEString52.makeAt();
        st1920.automaton.REString rEString54 = rEString38.makeSquareBracketsTilde(rEString52);
        st1920.automaton.REString rEString55 = rEString52.makeString();
        st1920.automaton.REString rEString56 = rEString2.makeAddBeta(rEString52);
        st1920.automaton.REString rEString58 = new st1920.automaton.REString("\"string\"{-1,32}");
        st1920.automaton.REString rEString59 = rEString58.makeHash();
        st1920.automaton.REString rEString60 = rEString56.makeAsterisk(rEString59);
        st1920.automaton.REString rEString61 = rEString56.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "\"string\"" + "'", str3.equals("\"string\""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
    }

    @Test
    public void test497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test497");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString5 = rEString4.makeString();
        st1920.automaton.REString rEString7 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString14 = rEString7.makeOr(rEString9, rEString12);
        st1920.automaton.REString rEString17 = rEString4.makeRange(rEString9, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString27 = rEString1.makeAnd(rEString17, rEString26);
        st1920.automaton.REString rEString28 = rEString17.makeHash();
        st1920.automaton.REString rEString29 = rEString28.makeAt();
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = rEString36.makeString();
        st1920.automaton.REString rEString39 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = rEString39.makeString();
        st1920.automaton.REString rEString41 = rEString34.makeOr(rEString36, rEString39);
        st1920.automaton.REString rEString44 = rEString31.makeRange(rEString36, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString46 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString47 = rEString46.makeString();
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString56 = rEString49.makeOr(rEString51, rEString54);
        st1920.automaton.REString rEString59 = rEString46.makeRange(rEString51, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString60 = rEString44.makeQuestionMark(rEString46);
        st1920.automaton.REString rEString61 = rEString60.makeBeta();
        st1920.automaton.REString rEString62 = rEString29.makeAddAlpha(rEString60);
        java.lang.String str63 = rEString60.string;
        st1920.automaton.REString rEString64 = rEString60.makeOne();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str63 + "' != '" + "hi!?" + "'", str63.equals("hi!?"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
    }

    @Test
    public void test498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test498");
        st1920.automaton.REString rEString2 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString12 = rEString2.makeSquareBracketsTilde(rEString6);
        st1920.automaton.REString rEString14 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString20 = rEString19.makeString();
        st1920.automaton.REString rEString21 = rEString14.makeOr(rEString16, rEString19);
        st1920.automaton.REString rEString23 = rEString12.makeBraces(rEString19, (int) '4');
        st1920.automaton.REString rEString25 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString26 = rEString25.makeString();
        st1920.automaton.REString rEString27 = rEString23.makeSquareBracketsTilde(rEString25);
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString30 = rEString29.makeString();
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString33 = rEString32.makeString();
        st1920.automaton.REString rEString35 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString37 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = rEString37.makeString();
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString42 = rEString35.makeOr(rEString37, rEString40);
        st1920.automaton.REString rEString45 = rEString32.makeRange(rEString37, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString47 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString50 = rEString49.makeString();
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString53 = rEString52.makeString();
        st1920.automaton.REString rEString54 = rEString47.makeOr(rEString49, rEString52);
        st1920.automaton.REString rEString55 = rEString29.makeAnd(rEString45, rEString54);
        st1920.automaton.REString rEString57 = rEString25.makeBraces(rEString45, 0);
        rEString57.string = "\"string\"{-1,32}";
        st1920.automaton.REString rEString61 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString62 = rEString61.makeString();
        st1920.automaton.REString rEString64 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString65 = rEString64.makeString();
        st1920.automaton.REString rEString67 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString70 = rEString69.makeString();
        st1920.automaton.REString rEString72 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString73 = rEString72.makeString();
        st1920.automaton.REString rEString74 = rEString67.makeOr(rEString69, rEString72);
        st1920.automaton.REString rEString77 = rEString64.makeRange(rEString69, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString78 = rEString61.makeAddOne(rEString64);
        st1920.automaton.REString rEString80 = new st1920.automaton.REString("[^hi!]");
        st1920.automaton.REString rEString82 = rEString64.makeBraces(rEString80, (-1));
        st1920.automaton.REString rEString83 = rEString57.makeAddOne(rEString64);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean84 = st1920.automaton.MatchString.matches("hi!|hi!", rEString83);
            org.junit.Assert.fail("Expected exception of type java.lang.Error; message: Unresolved compilation problem: \n	string cannot be resolved or is not a field\n");
        } catch (java.lang.Error e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString83);
    }

    @Test
    public void test499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test499");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString2 = rEString1.makeString();
        st1920.automaton.REString rEString4 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString9 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString10 = rEString9.makeString();
        st1920.automaton.REString rEString11 = rEString4.makeOr(rEString6, rEString9);
        st1920.automaton.REString rEString14 = rEString1.makeRange(rEString6, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString16 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = rEString16.makeString();
        st1920.automaton.REString rEString19 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString22 = rEString21.makeString();
        st1920.automaton.REString rEString24 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString25 = rEString24.makeString();
        st1920.automaton.REString rEString26 = rEString19.makeOr(rEString21, rEString24);
        st1920.automaton.REString rEString29 = rEString16.makeRange(rEString21, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString30 = rEString14.makeQuestionMark(rEString16);
        st1920.automaton.REString rEString32 = new st1920.automaton.REString("");
        st1920.automaton.REString rEString34 = rEString16.makeBraces(rEString32, 1);
        st1920.automaton.REString rEString36 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString38 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString43 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString44 = rEString43.makeString();
        st1920.automaton.REString rEString45 = rEString38.makeOr(rEString40, rEString43);
        st1920.automaton.REString rEString46 = rEString36.makeSquareBracketsTilde(rEString40);
        st1920.automaton.REString rEString47 = rEString46.makeAt();
        st1920.automaton.REString rEString48 = rEString32.makeSquareBracketsTilde(rEString46);
        st1920.automaton.REString rEString50 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString55 = rEString54.makeString();
        st1920.automaton.REString rEString57 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString58 = rEString57.makeString();
        st1920.automaton.REString rEString59 = rEString52.makeOr(rEString54, rEString57);
        st1920.automaton.REString rEString60 = rEString50.makeSquareBracketsTilde(rEString54);
        st1920.automaton.REString rEString61 = rEString60.makeHash();
        st1920.automaton.REString rEString63 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString64 = rEString63.makeString();
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString76 = rEString63.makeRange(rEString68, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString77 = rEString61.makeAsterisk(rEString76);
        st1920.automaton.REString rEString78 = rEString77.makeBeta();
        st1920.automaton.REString rEString79 = rEString77.makeString();
        st1920.automaton.REString rEString80 = rEString46.makeAddBeta(rEString79);
        st1920.automaton.REString rEString81 = rEString79.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString81);
    }

    @Test
    public void test500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test500");
        st1920.automaton.REString rEString1 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString3 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString4 = rEString3.makeString();
        st1920.automaton.REString rEString6 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString7 = rEString6.makeString();
        st1920.automaton.REString rEString8 = rEString1.makeOr(rEString3, rEString6);
        st1920.automaton.REString rEString9 = rEString3.makeDot();
        st1920.automaton.REString rEString10 = rEString3.makeString();
        st1920.automaton.REString rEString12 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString13 = rEString12.makeString();
        st1920.automaton.REString rEString15 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString17 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString18 = rEString17.makeString();
        st1920.automaton.REString rEString20 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString21 = rEString20.makeString();
        st1920.automaton.REString rEString22 = rEString15.makeOr(rEString17, rEString20);
        st1920.automaton.REString rEString25 = rEString12.makeRange(rEString17, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString27 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString29 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString31 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString32 = rEString31.makeString();
        st1920.automaton.REString rEString34 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString35 = rEString34.makeString();
        st1920.automaton.REString rEString36 = rEString29.makeOr(rEString31, rEString34);
        st1920.automaton.REString rEString37 = rEString27.makeSquareBracketsTilde(rEString31);
        st1920.automaton.REString rEString38 = rEString17.makeAsterisk(rEString27);
        st1920.automaton.REString rEString40 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString41 = rEString40.makeString();
        st1920.automaton.REString rEString44 = rEString38.makeBracesTwoInts(rEString41, (int) (byte) -1, (int) ' ');
        st1920.automaton.REString rEString46 = rEString3.makeBracesComma(rEString41, 1);
        st1920.automaton.REString rEString48 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString49 = rEString48.makeString();
        st1920.automaton.REString rEString51 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString52 = rEString51.makeString();
        st1920.automaton.REString rEString54 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString56 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString57 = rEString56.makeString();
        st1920.automaton.REString rEString59 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString60 = rEString59.makeString();
        st1920.automaton.REString rEString61 = rEString54.makeOr(rEString56, rEString59);
        st1920.automaton.REString rEString64 = rEString51.makeRange(rEString56, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString66 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString68 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString69 = rEString68.makeString();
        st1920.automaton.REString rEString71 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString72 = rEString71.makeString();
        st1920.automaton.REString rEString73 = rEString66.makeOr(rEString68, rEString71);
        st1920.automaton.REString rEString74 = rEString48.makeAnd(rEString64, rEString73);
        st1920.automaton.REString rEString76 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString77 = rEString76.makeString();
        st1920.automaton.REString rEString79 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString80 = rEString79.makeString();
        st1920.automaton.REString rEString82 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString84 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString85 = rEString84.makeString();
        st1920.automaton.REString rEString87 = new st1920.automaton.REString("hi!");
        st1920.automaton.REString rEString88 = rEString87.makeString();
        st1920.automaton.REString rEString89 = rEString82.makeOr(rEString84, rEString87);
        st1920.automaton.REString rEString92 = rEString79.makeRange(rEString84, (int) (short) -1, (int) (byte) 100);
        st1920.automaton.REString rEString93 = rEString76.makeAddOne(rEString79);
        st1920.automaton.REString rEString94 = rEString64.makeAddBeta(rEString79);
        java.lang.String str95 = rEString94.string;
        st1920.automaton.REString rEString96 = rEString3.makePlus(rEString94);
        st1920.automaton.REString rEString97 = rEString94.makeString();
        st1920.automaton.REString rEString98 = rEString97.makeHash();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str95 + "' != '" + "hi!b" + "'", str95.equals("hi!b"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(rEString98);
    }
}

